#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sembrar2")]
	public partial class MERSembrarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertADULTO(ADULTO instance);
    partial void UpdateADULTO(ADULTO instance);
    partial void DeleteADULTO(ADULTO instance);
    partial void InsertAREA(AREA instance);
    partial void UpdateAREA(AREA instance);
    partial void DeleteAREA(AREA instance);
    partial void InsertASISTENCIA(ASISTENCIA instance);
    partial void UpdateASISTENCIA(ASISTENCIA instance);
    partial void DeleteASISTENCIA(ASISTENCIA instance);
    partial void InsertASISTENCIAREUNION(ASISTENCIAREUNION instance);
    partial void UpdateASISTENCIAREUNION(ASISTENCIAREUNION instance);
    partial void DeleteASISTENCIAREUNION(ASISTENCIAREUNION instance);
    partial void Insertaspnet_Applications(aspnet_Applications instance);
    partial void Updateaspnet_Applications(aspnet_Applications instance);
    partial void Deleteaspnet_Applications(aspnet_Applications instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Paths(aspnet_Paths instance);
    partial void Updateaspnet_Paths(aspnet_Paths instance);
    partial void Deleteaspnet_Paths(aspnet_Paths instance);
    partial void Insertaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Updateaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Deleteaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Roles(aspnet_Roles instance);
    partial void Updateaspnet_Roles(aspnet_Roles instance);
    partial void Deleteaspnet_Roles(aspnet_Roles instance);
    partial void Insertaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void Updateaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void Deleteaspnet_SchemaVersions(aspnet_SchemaVersions instance);
    partial void Insertaspnet_Users(aspnet_Users instance);
    partial void Updateaspnet_Users(aspnet_Users instance);
    partial void Deleteaspnet_Users(aspnet_Users instance);
    partial void Insertaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Updateaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Deleteaspnet_UsersInRoles(aspnet_UsersInRoles instance);
    partial void Insertaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void Updateaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void Deleteaspnet_WebEvent_Events(aspnet_WebEvent_Events instance);
    partial void InsertCATEGORIATIPOFAMILIA(CATEGORIATIPOFAMILIA instance);
    partial void UpdateCATEGORIATIPOFAMILIA(CATEGORIATIPOFAMILIA instance);
    partial void DeleteCATEGORIATIPOFAMILIA(CATEGORIATIPOFAMILIA instance);
    partial void InsertCERTIFICADOMEDICO(CERTIFICADOMEDICO instance);
    partial void UpdateCERTIFICADOMEDICO(CERTIFICADOMEDICO instance);
    partial void DeleteCERTIFICADOMEDICO(CERTIFICADOMEDICO instance);
    partial void InsertCUESTIONARIO(CUESTIONARIO instance);
    partial void UpdateCUESTIONARIO(CUESTIONARIO instance);
    partial void DeleteCUESTIONARIO(CUESTIONARIO instance);
    partial void InsertENFERMEDAD(ENFERMEDAD instance);
    partial void UpdateENFERMEDAD(ENFERMEDAD instance);
    partial void DeleteENFERMEDAD(ENFERMEDAD instance);
    partial void InsertFAMILIA(FAMILIA instance);
    partial void UpdateFAMILIA(FAMILIA instance);
    partial void DeleteFAMILIA(FAMILIA instance);
    partial void InsertINDICADOR(INDICADOR instance);
    partial void UpdateINDICADOR(INDICADOR instance);
    partial void DeleteINDICADOR(INDICADOR instance);
    partial void InsertJOVEN(JOVEN instance);
    partial void UpdateJOVEN(JOVEN instance);
    partial void DeleteJOVEN(JOVEN instance);
    partial void InsertLINEADEACCION(LINEADEACCION instance);
    partial void UpdateLINEADEACCION(LINEADEACCION instance);
    partial void DeleteLINEADEACCION(LINEADEACCION instance);
    partial void InsertMATRICULA(MATRICULA instance);
    partial void UpdateMATRICULA(MATRICULA instance);
    partial void DeleteMATRICULA(MATRICULA instance);
    partial void InsertMENOREDAD(MENOREDAD instance);
    partial void UpdateMENOREDAD(MENOREDAD instance);
    partial void DeleteMENOREDAD(MENOREDAD instance);
    partial void InsertNINIO(NINIO instance);
    partial void UpdateNINIO(NINIO instance);
    partial void DeleteNINIO(NINIO instance);
    partial void InsertOBJETIVO(OBJETIVO instance);
    partial void UpdateOBJETIVO(OBJETIVO instance);
    partial void DeleteOBJETIVO(OBJETIVO instance);
    partial void InsertOCUPACION(OCUPACION instance);
    partial void UpdateOCUPACION(OCUPACION instance);
    partial void DeleteOCUPACION(OCUPACION instance);
    partial void InsertORIENTADOR(ORIENTADOR instance);
    partial void UpdateORIENTADOR(ORIENTADOR instance);
    partial void DeleteORIENTADOR(ORIENTADOR instance);
    partial void InsertORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO instance);
    partial void UpdateORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO instance);
    partial void DeleteORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO instance);
    partial void InsertPARENTEZCO(PARENTEZCO instance);
    partial void UpdatePARENTEZCO(PARENTEZCO instance);
    partial void DeletePARENTEZCO(PARENTEZCO instance);
    partial void InsertPERIODO(PERIODO instance);
    partial void UpdatePERIODO(PERIODO instance);
    partial void DeletePERIODO(PERIODO instance);
    partial void InsertPERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA instance);
    partial void UpdatePERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA instance);
    partial void DeletePERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA instance);
    partial void InsertPERSONA(PERSONA instance);
    partial void UpdatePERSONA(PERSONA instance);
    partial void DeletePERSONA(PERSONA instance);
    partial void InsertPERSONA_FAMILIA(PERSONA_FAMILIA instance);
    partial void UpdatePERSONA_FAMILIA(PERSONA_FAMILIA instance);
    partial void DeletePERSONA_FAMILIA(PERSONA_FAMILIA instance);
    partial void InsertPOSIBLERESPUESTA(POSIBLERESPUESTA instance);
    partial void UpdatePOSIBLERESPUESTA(POSIBLERESPUESTA instance);
    partial void DeletePOSIBLERESPUESTA(POSIBLERESPUESTA instance);
    partial void InsertPREGUNTA(PREGUNTA instance);
    partial void UpdatePREGUNTA(PREGUNTA instance);
    partial void DeletePREGUNTA(PREGUNTA instance);
    partial void InsertPREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS instance);
    partial void UpdatePREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS instance);
    partial void DeletePREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS instance);
    partial void InsertPROCESO(PROCESO instance);
    partial void UpdatePROCESO(PROCESO instance);
    partial void DeletePROCESO(PROCESO instance);
    partial void InsertPROCESO_ORIENTADOR(PROCESO_ORIENTADOR instance);
    partial void UpdatePROCESO_ORIENTADOR(PROCESO_ORIENTADOR instance);
    partial void DeletePROCESO_ORIENTADOR(PROCESO_ORIENTADOR instance);
    partial void InsertREPRESENTANTE(REPRESENTANTE instance);
    partial void UpdateREPRESENTANTE(REPRESENTANTE instance);
    partial void DeleteREPRESENTANTE(REPRESENTANTE instance);
    partial void InsertREUNION(REUNION instance);
    partial void UpdateREUNION(REUNION instance);
    partial void DeleteREUNION(REUNION instance);
    partial void InsertSOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO instance);
    partial void UpdateSOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO instance);
    partial void DeleteSOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO instance);
    partial void InsertTELEFONOPERSONA(TELEFONOPERSONA instance);
    partial void UpdateTELEFONOPERSONA(TELEFONOPERSONA instance);
    partial void DeleteTELEFONOPERSONA(TELEFONOPERSONA instance);
    partial void InsertTIPOASISTENCIA(TIPOASISTENCIA instance);
    partial void UpdateTIPOASISTENCIA(TIPOASISTENCIA instance);
    partial void DeleteTIPOASISTENCIA(TIPOASISTENCIA instance);
    partial void InsertTIPOASISTENTES(TIPOASISTENTES instance);
    partial void UpdateTIPOASISTENTES(TIPOASISTENTES instance);
    partial void DeleteTIPOASISTENTES(TIPOASISTENTES instance);
    partial void InsertTIPOFAMILIA(TIPOFAMILIA instance);
    partial void UpdateTIPOFAMILIA(TIPOFAMILIA instance);
    partial void DeleteTIPOFAMILIA(TIPOFAMILIA instance);
    partial void InsertTIPOPERIODO(TIPOPERIODO instance);
    partial void UpdateTIPOPERIODO(TIPOPERIODO instance);
    partial void DeleteTIPOPERIODO(TIPOPERIODO instance);
    partial void InsertTIPOPERSONA(TIPOPERSONA instance);
    partial void UpdateTIPOPERSONA(TIPOPERSONA instance);
    partial void DeleteTIPOPERSONA(TIPOPERSONA instance);
    partial void InsertTIPOPREGUNTA(TIPOPREGUNTA instance);
    partial void UpdateTIPOPREGUNTA(TIPOPREGUNTA instance);
    partial void DeleteTIPOPREGUNTA(TIPOPREGUNTA instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVISITADOMICILIAR(VISITADOMICILIAR instance);
    partial void UpdateVISITADOMICILIAR(VISITADOMICILIAR instance);
    partial void DeleteVISITADOMICILIAR(VISITADOMICILIAR instance);
    #endregion
		
		public MERSembrarDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.Sembrar2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MERSembrarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERSembrarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERSembrarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MERSembrarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PERSONASORIENTADOR> PERSONASORIENTADOR
		{
			get
			{
				return this.GetTable<PERSONASORIENTADOR>();
			}
		}
		
		public System.Data.Linq.Table<ADULTO> ADULTO
		{
			get
			{
				return this.GetTable<ADULTO>();
			}
		}
		
		public System.Data.Linq.Table<AREA> AREA
		{
			get
			{
				return this.GetTable<AREA>();
			}
		}
		
		public System.Data.Linq.Table<ASISTENCIA> ASISTENCIA
		{
			get
			{
				return this.GetTable<ASISTENCIA>();
			}
		}
		
		public System.Data.Linq.Table<ASISTENCIAREUNION> ASISTENCIAREUNION
		{
			get
			{
				return this.GetTable<ASISTENCIAREUNION>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Applications> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Applications>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Membership
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Paths> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Paths>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUsers>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profile
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Roles> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Roles>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersions> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersions>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Users> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_Users>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRoles>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Events> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Events>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIATIPOFAMILIA> CATEGORIATIPOFAMILIA
		{
			get
			{
				return this.GetTable<CATEGORIATIPOFAMILIA>();
			}
		}
		
		public System.Data.Linq.Table<CERTIFICADOMEDICO> CERTIFICADOMEDICO
		{
			get
			{
				return this.GetTable<CERTIFICADOMEDICO>();
			}
		}
		
		public System.Data.Linq.Table<CUESTIONARIO> CUESTIONARIO
		{
			get
			{
				return this.GetTable<CUESTIONARIO>();
			}
		}
		
		public System.Data.Linq.Table<ENFERMEDAD> ENFERMEDAD
		{
			get
			{
				return this.GetTable<ENFERMEDAD>();
			}
		}
		
		public System.Data.Linq.Table<FAMILIA> FAMILIA
		{
			get
			{
				return this.GetTable<FAMILIA>();
			}
		}
		
		public System.Data.Linq.Table<INDICADOR> INDICADOR
		{
			get
			{
				return this.GetTable<INDICADOR>();
			}
		}
		
		public System.Data.Linq.Table<JOVEN> JOVEN
		{
			get
			{
				return this.GetTable<JOVEN>();
			}
		}
		
		public System.Data.Linq.Table<LINEADEACCION> LINEADEACCION
		{
			get
			{
				return this.GetTable<LINEADEACCION>();
			}
		}
		
		public System.Data.Linq.Table<MATRICULA> MATRICULA
		{
			get
			{
				return this.GetTable<MATRICULA>();
			}
		}
		
		public System.Data.Linq.Table<MENOREDAD> MENOREDAD
		{
			get
			{
				return this.GetTable<MENOREDAD>();
			}
		}
		
		public System.Data.Linq.Table<NINIO> NINIO
		{
			get
			{
				return this.GetTable<NINIO>();
			}
		}
		
		public System.Data.Linq.Table<OBJETIVO> OBJETIVO
		{
			get
			{
				return this.GetTable<OBJETIVO>();
			}
		}
		
		public System.Data.Linq.Table<OCUPACION> OCUPACION
		{
			get
			{
				return this.GetTable<OCUPACION>();
			}
		}
		
		public System.Data.Linq.Table<ORIENTADOR> ORIENTADOR
		{
			get
			{
				return this.GetTable<ORIENTADOR>();
			}
		}
		
		public System.Data.Linq.Table<ORIENTADORACARGODEPROCESOENPERIODO> ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this.GetTable<ORIENTADORACARGODEPROCESOENPERIODO>();
			}
		}
		
		public System.Data.Linq.Table<PARENTEZCO> PARENTEZCO
		{
			get
			{
				return this.GetTable<PARENTEZCO>();
			}
		}
		
		public System.Data.Linq.Table<PERIODO> PERIODO
		{
			get
			{
				return this.GetTable<PERIODO>();
			}
		}
		
		public System.Data.Linq.Table<PERIODO_PERSONA_FAMILIA> PERIODO_PERSONA_FAMILIA
		{
			get
			{
				return this.GetTable<PERIODO_PERSONA_FAMILIA>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA> PERSONA
		{
			get
			{
				return this.GetTable<PERSONA>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA_FAMILIA> PERSONA_FAMILIA
		{
			get
			{
				return this.GetTable<PERSONA_FAMILIA>();
			}
		}
		
		public System.Data.Linq.Table<POSIBLERESPUESTA> POSIBLERESPUESTA
		{
			get
			{
				return this.GetTable<POSIBLERESPUESTA>();
			}
		}
		
		public System.Data.Linq.Table<PREGUNTA> PREGUNTA
		{
			get
			{
				return this.GetTable<PREGUNTA>();
			}
		}
		
		public System.Data.Linq.Table<PREGUNTASCONPOSIBLESRESPUESTAS> PREGUNTASCONPOSIBLESRESPUESTAS
		{
			get
			{
				return this.GetTable<PREGUNTASCONPOSIBLESRESPUESTAS>();
			}
		}
		
		public System.Data.Linq.Table<PROCESO> PROCESO
		{
			get
			{
				return this.GetTable<PROCESO>();
			}
		}
		
		public System.Data.Linq.Table<PROCESO_ORIENTADOR> PROCESO_ORIENTADOR
		{
			get
			{
				return this.GetTable<PROCESO_ORIENTADOR>();
			}
		}
		
		public System.Data.Linq.Table<REPRESENTANTE> REPRESENTANTE
		{
			get
			{
				return this.GetTable<REPRESENTANTE>();
			}
		}
		
		public System.Data.Linq.Table<REUNION> REUNION
		{
			get
			{
				return this.GetTable<REUNION>();
			}
		}
		
		public System.Data.Linq.Table<SOLUCIONCUESTIONARIO> SOLUCIONCUESTIONARIO
		{
			get
			{
				return this.GetTable<SOLUCIONCUESTIONARIO>();
			}
		}
		
		public System.Data.Linq.Table<TELEFONOPERSONA> TELEFONOPERSONA
		{
			get
			{
				return this.GetTable<TELEFONOPERSONA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOASISTENCIA> TIPOASISTENCIA
		{
			get
			{
				return this.GetTable<TIPOASISTENCIA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOASISTENTES> TIPOASISTENTES
		{
			get
			{
				return this.GetTable<TIPOASISTENTES>();
			}
		}
		
		public System.Data.Linq.Table<TIPOFAMILIA> TIPOFAMILIA
		{
			get
			{
				return this.GetTable<TIPOFAMILIA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOPERIODO> TIPOPERIODO
		{
			get
			{
				return this.GetTable<TIPOPERIODO>();
			}
		}
		
		public System.Data.Linq.Table<TIPOPERSONA> TIPOPERSONA
		{
			get
			{
				return this.GetTable<TIPOPERSONA>();
			}
		}
		
		public System.Data.Linq.Table<TIPOPREGUNTA> TIPOPREGUNTA
		{
			get
			{
				return this.GetTable<TIPOPREGUNTA>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<VISITADOMICILIAR> VISITADOMICILIAR
		{
			get
			{
				return this.GetTable<VISITADOMICILIAR>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONASORIENTADOR")]
	public partial class PERSONASORIENTADOR
	{
		
		private int _IDLINEAACCION;
		
		private int _IDPROCESO;
		
		private int _IDPERIODO;
		
		private int _IDORIENTADOR;
		
		private int _IDPERSONA;
		
		private string _NOMBRE;
		
		private System.Nullable<System.DateTime> _FECHANACIMIENTOPERSONA;
		
		public PERSONASORIENTADOR()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEAACCION", DbType="Int NOT NULL")]
		public int IDLINEAACCION
		{
			get
			{
				return this._IDLINEAACCION;
			}
			set
			{
				if ((this._IDLINEAACCION != value))
				{
					this._IDLINEAACCION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL")]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					this._IDPROCESO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL")]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					this._IDPERIODO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL")]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					this._IDORIENTADOR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					this._IDPERSONA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(203)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this._NOMBRE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHANACIMIENTOPERSONA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHANACIMIENTOPERSONA
		{
			get
			{
				return this._FECHANACIMIENTOPERSONA;
			}
			set
			{
				if ((this._FECHANACIMIENTOPERSONA != value))
				{
					this._FECHANACIMIENTOPERSONA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADULTO")]
	public partial class ADULTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERSONA;
		
		private int _IDADULTO;
		
		private bool _ESTUDIAADULTO;
		
		private string _DONDEESTUDIAADULTO;
		
		private string _NIVELEDUCACIONADULTO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDADULTOChanging(int value);
    partial void OnIDADULTOChanged();
    partial void OnESTUDIAADULTOChanging(bool value);
    partial void OnESTUDIAADULTOChanged();
    partial void OnDONDEESTUDIAADULTOChanging(string value);
    partial void OnDONDEESTUDIAADULTOChanged();
    partial void OnNIVELEDUCACIONADULTOChanging(string value);
    partial void OnNIVELEDUCACIONADULTOChanged();
    #endregion
		
		public ADULTO()
		{
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDADULTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDADULTO
		{
			get
			{
				return this._IDADULTO;
			}
			set
			{
				if ((this._IDADULTO != value))
				{
					this.OnIDADULTOChanging(value);
					this.SendPropertyChanging();
					this._IDADULTO = value;
					this.SendPropertyChanged("IDADULTO");
					this.OnIDADULTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTUDIAADULTO", DbType="Bit NOT NULL")]
		public bool ESTUDIAADULTO
		{
			get
			{
				return this._ESTUDIAADULTO;
			}
			set
			{
				if ((this._ESTUDIAADULTO != value))
				{
					this.OnESTUDIAADULTOChanging(value);
					this.SendPropertyChanging();
					this._ESTUDIAADULTO = value;
					this.SendPropertyChanged("ESTUDIAADULTO");
					this.OnESTUDIAADULTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONDEESTUDIAADULTO", DbType="VarChar(150)")]
		public string DONDEESTUDIAADULTO
		{
			get
			{
				return this._DONDEESTUDIAADULTO;
			}
			set
			{
				if ((this._DONDEESTUDIAADULTO != value))
				{
					this.OnDONDEESTUDIAADULTOChanging(value);
					this.SendPropertyChanging();
					this._DONDEESTUDIAADULTO = value;
					this.SendPropertyChanged("DONDEESTUDIAADULTO");
					this.OnDONDEESTUDIAADULTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIVELEDUCACIONADULTO", DbType="VarChar(20)")]
		public string NIVELEDUCACIONADULTO
		{
			get
			{
				return this._NIVELEDUCACIONADULTO;
			}
			set
			{
				if ((this._NIVELEDUCACIONADULTO != value))
				{
					this.OnNIVELEDUCACIONADULTOChanging(value);
					this.SendPropertyChanging();
					this._NIVELEDUCACIONADULTO = value;
					this.SendPropertyChanged("NIVELEDUCACIONADULTO");
					this.OnNIVELEDUCACIONADULTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ADULTO", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ADULTO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ADULTO.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AREA")]
	public partial class AREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAREA;
		
		private string _NOMBREAREA;
		
		private EntitySet<CATEGORIATIPOFAMILIA> _CATEGORIATIPOFAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAREAChanging(int value);
    partial void OnIDAREAChanged();
    partial void OnNOMBREAREAChanging(string value);
    partial void OnNOMBREAREAChanged();
    #endregion
		
		public AREA()
		{
			this._CATEGORIATIPOFAMILIA = new EntitySet<CATEGORIATIPOFAMILIA>(new Action<CATEGORIATIPOFAMILIA>(this.attach_CATEGORIATIPOFAMILIA), new Action<CATEGORIATIPOFAMILIA>(this.detach_CATEGORIATIPOFAMILIA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAREA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAREA
		{
			get
			{
				return this._IDAREA;
			}
			set
			{
				if ((this._IDAREA != value))
				{
					this.OnIDAREAChanging(value);
					this.SendPropertyChanging();
					this._IDAREA = value;
					this.SendPropertyChanged("IDAREA");
					this.OnIDAREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREAREA", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOMBREAREA
		{
			get
			{
				return this._NOMBREAREA;
			}
			set
			{
				if ((this._NOMBREAREA != value))
				{
					this.OnNOMBREAREAChanging(value);
					this.SendPropertyChanging();
					this._NOMBREAREA = value;
					this.SendPropertyChanged("NOMBREAREA");
					this.OnNOMBREAREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AREA_CATEGORIATIPOFAMILIA", Storage="_CATEGORIATIPOFAMILIA", ThisKey="IDAREA", OtherKey="IDAREA")]
		public EntitySet<CATEGORIATIPOFAMILIA> CATEGORIATIPOFAMILIA
		{
			get
			{
				return this._CATEGORIATIPOFAMILIA;
			}
			set
			{
				this._CATEGORIATIPOFAMILIA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CATEGORIATIPOFAMILIA(CATEGORIATIPOFAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.AREA = this;
		}
		
		private void detach_CATEGORIATIPOFAMILIA(CATEGORIATIPOFAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.AREA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASISTENCIA")]
	public partial class ASISTENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDASISTENCIA;
		
		private int _IDLINEADEACCION;
		
		private int _IDORIENTADOR;
		
		private int _IDPROCESO;
		
		private int _IDPERIODO;
		
		private int _IDPERSONA;
		
		private int _IDTIPOASISTENCIA;
		
		private System.DateTime _FECHAASISTENCIA;
		
		private EntityRef<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntityRef<PERSONA> _PERSONA;
		
		private EntityRef<REPRESENTANTE> _REPRESENTANTE;
		
		private EntityRef<TIPOASISTENCIA> _TIPOASISTENCIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDASISTENCIAChanging(int value);
    partial void OnIDASISTENCIAChanged();
    partial void OnIDLINEADEACCIONChanging(int value);
    partial void OnIDLINEADEACCIONChanged();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDTIPOASISTENCIAChanging(int value);
    partial void OnIDTIPOASISTENCIAChanged();
    partial void OnFECHAASISTENCIAChanging(System.DateTime value);
    partial void OnFECHAASISTENCIAChanged();
    #endregion
		
		public ASISTENCIA()
		{
			this._ORIENTADORACARGODEPROCESOENPERIODO = default(EntityRef<ORIENTADORACARGODEPROCESOENPERIODO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			this._REPRESENTANTE = default(EntityRef<REPRESENTANTE>);
			this._TIPOASISTENCIA = default(EntityRef<TIPOASISTENCIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDASISTENCIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDASISTENCIA
		{
			get
			{
				return this._IDASISTENCIA;
			}
			set
			{
				if ((this._IDASISTENCIA != value))
				{
					this.OnIDASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDASISTENCIA = value;
					this.SendPropertyChanged("IDASISTENCIA");
					this.OnIDASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEADEACCION", DbType="Int NOT NULL")]
		public int IDLINEADEACCION
		{
			get
			{
				return this._IDLINEADEACCION;
			}
			set
			{
				if ((this._IDLINEADEACCION != value))
				{
					if ((this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue || this._REPRESENTANTE.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._IDLINEADEACCION = value;
					this.SendPropertyChanged("IDLINEADEACCION");
					this.OnIDLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL")]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL")]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL")]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOASISTENCIA", DbType="Int NOT NULL")]
		public int IDTIPOASISTENCIA
		{
			get
			{
				return this._IDTIPOASISTENCIA;
			}
			set
			{
				if ((this._IDTIPOASISTENCIA != value))
				{
					if (this._TIPOASISTENCIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOASISTENCIA = value;
					this.SendPropertyChanged("IDTIPOASISTENCIA");
					this.OnIDTIPOASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAASISTENCIA", DbType="Date NOT NULL")]
		public System.DateTime FECHAASISTENCIA
		{
			get
			{
				return this._FECHAASISTENCIA;
			}
			set
			{
				if ((this._FECHAASISTENCIA != value))
				{
					this.OnFECHAASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._FECHAASISTENCIA = value;
					this.SendPropertyChanged("FECHAASISTENCIA");
					this.OnFECHAASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_ASISTENCIA", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", IsForeignKey=true)]
		public ORIENTADORACARGODEPROCESOENPERIODO ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
			}
			set
			{
				ORIENTADORACARGODEPROCESOENPERIODO previousValue = this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = null;
						previousValue.ASISTENCIA.Remove(this);
					}
					this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIA.Add(this);
						this._IDLINEADEACCION = value.IDLINEADEACCION;
						this._IDORIENTADOR = value.IDORIENTADOR;
						this._IDPROCESO = value.IDPROCESO;
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDLINEADEACCION = default(int);
						this._IDORIENTADOR = default(int);
						this._IDPROCESO = default(int);
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("ORIENTADORACARGODEPROCESOENPERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ASISTENCIA", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ASISTENCIA.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIA.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REPRESENTANTE_ASISTENCIA", Storage="_REPRESENTANTE", ThisKey="IDLINEADEACCION", OtherKey="IDREPRESENTANTE", IsForeignKey=true)]
		public REPRESENTANTE REPRESENTANTE
		{
			get
			{
				return this._REPRESENTANTE.Entity;
			}
			set
			{
				REPRESENTANTE previousValue = this._REPRESENTANTE.Entity;
				if (((previousValue != value) 
							|| (this._REPRESENTANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REPRESENTANTE.Entity = null;
						previousValue.ASISTENCIA.Remove(this);
					}
					this._REPRESENTANTE.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIA.Add(this);
						this._IDLINEADEACCION = value.IDREPRESENTANTE;
					}
					else
					{
						this._IDLINEADEACCION = default(int);
					}
					this.SendPropertyChanged("REPRESENTANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENCIA_ASISTENCIA", Storage="_TIPOASISTENCIA", ThisKey="IDTIPOASISTENCIA", OtherKey="IDTIPOASISTENCIA", IsForeignKey=true)]
		public TIPOASISTENCIA TIPOASISTENCIA
		{
			get
			{
				return this._TIPOASISTENCIA.Entity;
			}
			set
			{
				TIPOASISTENCIA previousValue = this._TIPOASISTENCIA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOASISTENCIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOASISTENCIA.Entity = null;
						previousValue.ASISTENCIA.Remove(this);
					}
					this._TIPOASISTENCIA.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIA.Add(this);
						this._IDTIPOASISTENCIA = value.IDTIPOASISTENCIA;
					}
					else
					{
						this._IDTIPOASISTENCIA = default(int);
					}
					this.SendPropertyChanged("TIPOASISTENCIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASISTENCIAREUNION")]
	public partial class ASISTENCIAREUNION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDASISTENCIAREUNION;
		
		private int _IDREUNION;
		
		private int _IDTIPOASISTENCIA;
		
		private int _IDPERSONA;
		
		private EntityRef<PERSONA> _PERSONA;
		
		private EntityRef<REUNION> _REUNION;
		
		private EntityRef<TIPOASISTENCIA> _TIPOASISTENCIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDASISTENCIAREUNIONChanging(int value);
    partial void OnIDASISTENCIAREUNIONChanged();
    partial void OnIDREUNIONChanging(int value);
    partial void OnIDREUNIONChanged();
    partial void OnIDTIPOASISTENCIAChanging(int value);
    partial void OnIDTIPOASISTENCIAChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    #endregion
		
		public ASISTENCIAREUNION()
		{
			this._PERSONA = default(EntityRef<PERSONA>);
			this._REUNION = default(EntityRef<REUNION>);
			this._TIPOASISTENCIA = default(EntityRef<TIPOASISTENCIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDASISTENCIAREUNION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDASISTENCIAREUNION
		{
			get
			{
				return this._IDASISTENCIAREUNION;
			}
			set
			{
				if ((this._IDASISTENCIAREUNION != value))
				{
					this.OnIDASISTENCIAREUNIONChanging(value);
					this.SendPropertyChanging();
					this._IDASISTENCIAREUNION = value;
					this.SendPropertyChanged("IDASISTENCIAREUNION");
					this.OnIDASISTENCIAREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREUNION", DbType="Int NOT NULL")]
		public int IDREUNION
		{
			get
			{
				return this._IDREUNION;
			}
			set
			{
				if ((this._IDREUNION != value))
				{
					if (this._REUNION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDREUNIONChanging(value);
					this.SendPropertyChanging();
					this._IDREUNION = value;
					this.SendPropertyChanged("IDREUNION");
					this.OnIDREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOASISTENCIA", DbType="Int NOT NULL")]
		public int IDTIPOASISTENCIA
		{
			get
			{
				return this._IDTIPOASISTENCIA;
			}
			set
			{
				if ((this._IDTIPOASISTENCIA != value))
				{
					if (this._TIPOASISTENCIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOASISTENCIA = value;
					this.SendPropertyChanged("IDTIPOASISTENCIA");
					this.OnIDTIPOASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ASISTENCIAREUNION", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ASISTENCIAREUNION.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIAREUNION.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REUNION_ASISTENCIAREUNION", Storage="_REUNION", ThisKey="IDREUNION", OtherKey="IDREUNION", IsForeignKey=true)]
		public REUNION REUNION
		{
			get
			{
				return this._REUNION.Entity;
			}
			set
			{
				REUNION previousValue = this._REUNION.Entity;
				if (((previousValue != value) 
							|| (this._REUNION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REUNION.Entity = null;
						previousValue.ASISTENCIAREUNION.Remove(this);
					}
					this._REUNION.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIAREUNION.Add(this);
						this._IDREUNION = value.IDREUNION;
					}
					else
					{
						this._IDREUNION = default(int);
					}
					this.SendPropertyChanged("REUNION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENCIA_ASISTENCIAREUNION", Storage="_TIPOASISTENCIA", ThisKey="IDTIPOASISTENCIA", OtherKey="IDTIPOASISTENCIA", IsForeignKey=true)]
		public TIPOASISTENCIA TIPOASISTENCIA
		{
			get
			{
				return this._TIPOASISTENCIA.Entity;
			}
			set
			{
				TIPOASISTENCIA previousValue = this._TIPOASISTENCIA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOASISTENCIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOASISTENCIA.Entity = null;
						previousValue.ASISTENCIAREUNION.Remove(this);
					}
					this._TIPOASISTENCIA.Entity = value;
					if ((value != null))
					{
						value.ASISTENCIAREUNION.Add(this);
						this._IDTIPOASISTENCIA = value.IDTIPOASISTENCIA;
					}
					else
					{
						this._IDTIPOASISTENCIA = default(int);
					}
					this.SendPropertyChanged("TIPOASISTENCIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_Paths> _aspnet_Paths;
		
		private EntitySet<aspnet_Roles> _aspnet_Roles;
		
		private EntitySet<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Applications()
		{
			this._aspnet_Membership = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Membership), new Action<aspnet_Membership>(this.detach_aspnet_Membership));
			this._aspnet_Paths = new EntitySet<aspnet_Paths>(new Action<aspnet_Paths>(this.attach_aspnet_Paths), new Action<aspnet_Paths>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Roles>(new Action<aspnet_Roles>(this.attach_aspnet_Roles), new Action<aspnet_Roles>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_Users>(new Action<aspnet_Users>(this.attach_aspnet_Users), new Action<aspnet_Users>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership;
			}
			set
			{
				this._aspnet_Membership.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Paths", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Paths> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Roles", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Roles> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Users", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Users> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Membership(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Membership(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Paths entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Roles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
		
		private void attach_aspnet_Users(aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = this;
		}
		
		private void detach_aspnet_Users(aspnet_Users entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Applications = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Membership", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Membership.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Membership", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Paths : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Paths()
		{
			this._aspnet_PersonalizationAllUsers = default(EntityRef<aspnet_PersonalizationAllUsers>);
			this._aspnet_PersonalizationPerUser = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUser), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUser));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationAllUsers", Storage="_aspnet_PersonalizationAllUsers", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
		{
			get
			{
				return this._aspnet_PersonalizationAllUsers.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUsers previousValue = this._aspnet_PersonalizationAllUsers.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUsers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUsers.Entity = null;
						previousValue.aspnet_Paths = null;
					}
					this._aspnet_PersonalizationAllUsers.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUsers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUser", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this._aspnet_PersonalizationPerUser;
			}
			set
			{
				this._aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Paths", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Paths = this;
		}
		
		private void detach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Paths = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Paths> _aspnet_Paths;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUsers()
		{
			this._aspnet_Paths = default(EntityRef<aspnet_Paths>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationAllUsers", Storage="_aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Paths aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths.Entity;
			}
			set
			{
				aspnet_Paths previousValue = this._aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Paths.Entity = null;
						previousValue.aspnet_PersonalizationAllUsers = null;
					}
					this._aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUsers = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Paths");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Paths> _aspnet_Paths;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Paths = default(EntityRef<aspnet_Paths>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Paths.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Paths_aspnet_PersonalizationPerUser", Storage="_aspnet_Paths", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Paths aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths.Entity;
			}
			set
			{
				aspnet_Paths previousValue = this._aspnet_Paths.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Paths.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Paths.Entity = null;
						previousValue.aspnet_PersonalizationPerUser.Remove(this);
					}
					this._aspnet_Paths.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUser.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Paths");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_PersonalizationPerUser", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_PersonalizationPerUser.Remove(this);
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Profile", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRoles> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Roles()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRoles>(new Action<aspnet_UsersInRoles>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRoles>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Roles_aspnet_UsersInRoles", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Roles", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Roles = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersions()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRoles> _aspnet_UsersInRoles;
		
		private EntitySet<ORIENTADOR> _ORIENTADOR;
		
		private EntityRef<aspnet_Applications> _aspnet_Applications;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_Users()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUser = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUser), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUser));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRoles>(new Action<aspnet_UsersInRoles>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRoles>(this.detach_aspnet_UsersInRoles));
			this._ORIENTADOR = new EntitySet<ORIENTADOR>(new Action<ORIENTADOR>(this.attach_ORIENTADOR), new Action<ORIENTADOR>(this.detach_ORIENTADOR));
			this._aspnet_Applications = default(EntityRef<aspnet_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_Users = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUser", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
		{
			get
			{
				return this._aspnet_PersonalizationPerUser;
			}
			set
			{
				this._aspnet_PersonalizationPerUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_Users = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_UsersInRoles", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRoles> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_ORIENTADOR", Storage="_ORIENTADOR", ThisKey="UserId", OtherKey="USERIDASP")]
		public EntitySet<ORIENTADOR> ORIENTADOR
		{
			get
			{
				return this._ORIENTADOR;
			}
			set
			{
				this._ORIENTADOR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Applications_aspnet_Users", Storage="_aspnet_Applications", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Applications aspnet_Applications
		{
			get
			{
				return this._aspnet_Applications.Entity;
			}
			set
			{
				aspnet_Applications previousValue = this._aspnet_Applications.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Applications.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Applications.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = this;
		}
		
		private void detach_aspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRoles entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = null;
		}
		
		private void attach_ORIENTADOR(ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = this;
		}
		
		private void detach_ORIENTADOR(ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Roles> _aspnet_Roles;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRoles()
		{
			this._aspnet_Roles = default(EntityRef<aspnet_Roles>);
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Roles_aspnet_UsersInRoles", Storage="_aspnet_Roles", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Roles aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles.Entity;
			}
			set
			{
				aspnet_Roles previousValue = this._aspnet_Roles.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Roles.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Roles.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_aspnet_UsersInRoles", Storage="_aspnet_Users", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Events()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIATIPOFAMILIA")]
	public partial class CATEGORIATIPOFAMILIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCATEGORIATIPOFAMILIA;
		
		private string _NOMBRECATEGORIATIPOFAMILIA;
		
		private int _IDAREA;
		
		private EntityRef<AREA> _AREA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCATEGORIATIPOFAMILIAChanging(int value);
    partial void OnIDCATEGORIATIPOFAMILIAChanged();
    partial void OnNOMBRECATEGORIATIPOFAMILIAChanging(string value);
    partial void OnNOMBRECATEGORIATIPOFAMILIAChanged();
    partial void OnIDAREAChanging(int value);
    partial void OnIDAREAChanged();
    #endregion
		
		public CATEGORIATIPOFAMILIA()
		{
			this._AREA = default(EntityRef<AREA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCATEGORIATIPOFAMILIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCATEGORIATIPOFAMILIA
		{
			get
			{
				return this._IDCATEGORIATIPOFAMILIA;
			}
			set
			{
				if ((this._IDCATEGORIATIPOFAMILIA != value))
				{
					this.OnIDCATEGORIATIPOFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDCATEGORIATIPOFAMILIA = value;
					this.SendPropertyChanged("IDCATEGORIATIPOFAMILIA");
					this.OnIDCATEGORIATIPOFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRECATEGORIATIPOFAMILIA", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOMBRECATEGORIATIPOFAMILIA
		{
			get
			{
				return this._NOMBRECATEGORIATIPOFAMILIA;
			}
			set
			{
				if ((this._NOMBRECATEGORIATIPOFAMILIA != value))
				{
					this.OnNOMBRECATEGORIATIPOFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._NOMBRECATEGORIATIPOFAMILIA = value;
					this.SendPropertyChanged("NOMBRECATEGORIATIPOFAMILIA");
					this.OnNOMBRECATEGORIATIPOFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAREA", DbType="Int NOT NULL")]
		public int IDAREA
		{
			get
			{
				return this._IDAREA;
			}
			set
			{
				if ((this._IDAREA != value))
				{
					if (this._AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAREAChanging(value);
					this.SendPropertyChanging();
					this._IDAREA = value;
					this.SendPropertyChanged("IDAREA");
					this.OnIDAREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AREA_CATEGORIATIPOFAMILIA", Storage="_AREA", ThisKey="IDAREA", OtherKey="IDAREA", IsForeignKey=true)]
		public AREA AREA
		{
			get
			{
				return this._AREA.Entity;
			}
			set
			{
				AREA previousValue = this._AREA.Entity;
				if (((previousValue != value) 
							|| (this._AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AREA.Entity = null;
						previousValue.CATEGORIATIPOFAMILIA.Remove(this);
					}
					this._AREA.Entity = value;
					if ((value != null))
					{
						value.CATEGORIATIPOFAMILIA.Add(this);
						this._IDAREA = value.IDAREA;
					}
					else
					{
						this._IDAREA = default(int);
					}
					this.SendPropertyChanged("AREA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CERTIFICADOMEDICO")]
	public partial class CERTIFICADOMEDICO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCERTIFICADOMEDICO;
		
		private System.Nullable<int> _IDPERSONA;
		
		private System.Nullable<int> _IDMENOREDAD;
		
		private System.Nullable<int> _IDENFEREMEDAD;
		
		private bool _SANOCERTIFICADOMEDICO;
		
		private bool _ENFERMOCERTIFICADOMEDICO;
		
		private string _OBSERVACIONCERTIFICADOMEDICO;
		
		private EntityRef<ENFERMEDAD> _ENFERMEDAD;
		
		private EntityRef<MENOREDAD> _MENOREDAD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCERTIFICADOMEDICOChanging(int value);
    partial void OnIDCERTIFICADOMEDICOChanged();
    partial void OnIDPERSONAChanging(System.Nullable<int> value);
    partial void OnIDPERSONAChanged();
    partial void OnIDMENOREDADChanging(System.Nullable<int> value);
    partial void OnIDMENOREDADChanged();
    partial void OnIDENFEREMEDADChanging(System.Nullable<int> value);
    partial void OnIDENFEREMEDADChanged();
    partial void OnSANOCERTIFICADOMEDICOChanging(bool value);
    partial void OnSANOCERTIFICADOMEDICOChanged();
    partial void OnENFERMOCERTIFICADOMEDICOChanging(bool value);
    partial void OnENFERMOCERTIFICADOMEDICOChanged();
    partial void OnOBSERVACIONCERTIFICADOMEDICOChanging(string value);
    partial void OnOBSERVACIONCERTIFICADOMEDICOChanged();
    #endregion
		
		public CERTIFICADOMEDICO()
		{
			this._ENFERMEDAD = default(EntityRef<ENFERMEDAD>);
			this._MENOREDAD = default(EntityRef<MENOREDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCERTIFICADOMEDICO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCERTIFICADOMEDICO
		{
			get
			{
				return this._IDCERTIFICADOMEDICO;
			}
			set
			{
				if ((this._IDCERTIFICADOMEDICO != value))
				{
					this.OnIDCERTIFICADOMEDICOChanging(value);
					this.SendPropertyChanging();
					this._IDCERTIFICADOMEDICO = value;
					this.SendPropertyChanged("IDCERTIFICADOMEDICO");
					this.OnIDCERTIFICADOMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int")]
		public System.Nullable<int> IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMENOREDAD", DbType="Int")]
		public System.Nullable<int> IDMENOREDAD
		{
			get
			{
				return this._IDMENOREDAD;
			}
			set
			{
				if ((this._IDMENOREDAD != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._IDMENOREDAD = value;
					this.SendPropertyChanged("IDMENOREDAD");
					this.OnIDMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDENFEREMEDAD", DbType="Int")]
		public System.Nullable<int> IDENFEREMEDAD
		{
			get
			{
				return this._IDENFEREMEDAD;
			}
			set
			{
				if ((this._IDENFEREMEDAD != value))
				{
					if (this._ENFERMEDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDENFEREMEDADChanging(value);
					this.SendPropertyChanging();
					this._IDENFEREMEDAD = value;
					this.SendPropertyChanged("IDENFEREMEDAD");
					this.OnIDENFEREMEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SANOCERTIFICADOMEDICO", DbType="Bit NOT NULL")]
		public bool SANOCERTIFICADOMEDICO
		{
			get
			{
				return this._SANOCERTIFICADOMEDICO;
			}
			set
			{
				if ((this._SANOCERTIFICADOMEDICO != value))
				{
					this.OnSANOCERTIFICADOMEDICOChanging(value);
					this.SendPropertyChanging();
					this._SANOCERTIFICADOMEDICO = value;
					this.SendPropertyChanged("SANOCERTIFICADOMEDICO");
					this.OnSANOCERTIFICADOMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENFERMOCERTIFICADOMEDICO", DbType="Bit NOT NULL")]
		public bool ENFERMOCERTIFICADOMEDICO
		{
			get
			{
				return this._ENFERMOCERTIFICADOMEDICO;
			}
			set
			{
				if ((this._ENFERMOCERTIFICADOMEDICO != value))
				{
					this.OnENFERMOCERTIFICADOMEDICOChanging(value);
					this.SendPropertyChanging();
					this._ENFERMOCERTIFICADOMEDICO = value;
					this.SendPropertyChanged("ENFERMOCERTIFICADOMEDICO");
					this.OnENFERMOCERTIFICADOMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONCERTIFICADOMEDICO", DbType="VarChar(500)")]
		public string OBSERVACIONCERTIFICADOMEDICO
		{
			get
			{
				return this._OBSERVACIONCERTIFICADOMEDICO;
			}
			set
			{
				if ((this._OBSERVACIONCERTIFICADOMEDICO != value))
				{
					this.OnOBSERVACIONCERTIFICADOMEDICOChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONCERTIFICADOMEDICO = value;
					this.SendPropertyChanged("OBSERVACIONCERTIFICADOMEDICO");
					this.OnOBSERVACIONCERTIFICADOMEDICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ENFERMEDAD_CERTIFICADOMEDICO", Storage="_ENFERMEDAD", ThisKey="IDENFEREMEDAD", OtherKey="IDENFEREMEDAD", IsForeignKey=true)]
		public ENFERMEDAD ENFERMEDAD
		{
			get
			{
				return this._ENFERMEDAD.Entity;
			}
			set
			{
				ENFERMEDAD previousValue = this._ENFERMEDAD.Entity;
				if (((previousValue != value) 
							|| (this._ENFERMEDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ENFERMEDAD.Entity = null;
						previousValue.CERTIFICADOMEDICO.Remove(this);
					}
					this._ENFERMEDAD.Entity = value;
					if ((value != null))
					{
						value.CERTIFICADOMEDICO.Add(this);
						this._IDENFEREMEDAD = value.IDENFEREMEDAD;
					}
					else
					{
						this._IDENFEREMEDAD = default(Nullable<int>);
					}
					this.SendPropertyChanged("ENFERMEDAD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_CERTIFICADOMEDICO", Storage="_MENOREDAD", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD", IsForeignKey=true)]
		public MENOREDAD MENOREDAD
		{
			get
			{
				return this._MENOREDAD.Entity;
			}
			set
			{
				MENOREDAD previousValue = this._MENOREDAD.Entity;
				if (((previousValue != value) 
							|| (this._MENOREDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENOREDAD.Entity = null;
						previousValue.CERTIFICADOMEDICO.Remove(this);
					}
					this._MENOREDAD.Entity = value;
					if ((value != null))
					{
						value.CERTIFICADOMEDICO.Add(this);
						this._IDPERSONA = value.IDPERSONA;
						this._IDMENOREDAD = value.IDMENOREDAD;
					}
					else
					{
						this._IDPERSONA = default(Nullable<int>);
						this._IDMENOREDAD = default(Nullable<int>);
					}
					this.SendPropertyChanged("MENOREDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUESTIONARIO")]
	public partial class CUESTIONARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPROCESO;
		
		private int _IDOBJETIVO;
		
		private int _IDINDICADOR;
		
		private int _IDPREGUNTA;
		
		private bool _ESTADOPREGUNTACUESTIONARIO;
		
		private string _OBSERVACIONESCUESTIONARIO;
		
		private EntitySet<SOLUCIONCUESTIONARIO> _SOLUCIONCUESTIONARIO;
		
		private EntityRef<INDICADOR> _INDICADOR;
		
		private EntityRef<OBJETIVO> _OBJETIVO;
		
		private EntityRef<PREGUNTA> _PREGUNTA;
		
		private EntityRef<PROCESO> _PROCESO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDOBJETIVOChanging(int value);
    partial void OnIDOBJETIVOChanged();
    partial void OnIDINDICADORChanging(int value);
    partial void OnIDINDICADORChanged();
    partial void OnIDPREGUNTAChanging(int value);
    partial void OnIDPREGUNTAChanged();
    partial void OnESTADOPREGUNTACUESTIONARIOChanging(bool value);
    partial void OnESTADOPREGUNTACUESTIONARIOChanged();
    partial void OnOBSERVACIONESCUESTIONARIOChanging(string value);
    partial void OnOBSERVACIONESCUESTIONARIOChanged();
    #endregion
		
		public CUESTIONARIO()
		{
			this._SOLUCIONCUESTIONARIO = new EntitySet<SOLUCIONCUESTIONARIO>(new Action<SOLUCIONCUESTIONARIO>(this.attach_SOLUCIONCUESTIONARIO), new Action<SOLUCIONCUESTIONARIO>(this.detach_SOLUCIONCUESTIONARIO));
			this._INDICADOR = default(EntityRef<INDICADOR>);
			this._OBJETIVO = default(EntityRef<OBJETIVO>);
			this._PREGUNTA = default(EntityRef<PREGUNTA>);
			this._PROCESO = default(EntityRef<PROCESO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._PROCESO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOBJETIVO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDOBJETIVO
		{
			get
			{
				return this._IDOBJETIVO;
			}
			set
			{
				if ((this._IDOBJETIVO != value))
				{
					if (this._OBJETIVO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDOBJETIVOChanging(value);
					this.SendPropertyChanging();
					this._IDOBJETIVO = value;
					this.SendPropertyChanged("IDOBJETIVO");
					this.OnIDOBJETIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDINDICADOR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDINDICADOR
		{
			get
			{
				return this._IDINDICADOR;
			}
			set
			{
				if ((this._IDINDICADOR != value))
				{
					if (this._INDICADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDINDICADORChanging(value);
					this.SendPropertyChanging();
					this._IDINDICADOR = value;
					this.SendPropertyChanged("IDINDICADOR");
					this.OnIDINDICADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPREGUNTA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPREGUNTA
		{
			get
			{
				return this._IDPREGUNTA;
			}
			set
			{
				if ((this._IDPREGUNTA != value))
				{
					if (this._PREGUNTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDPREGUNTA = value;
					this.SendPropertyChanged("IDPREGUNTA");
					this.OnIDPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOPREGUNTACUESTIONARIO", DbType="Bit NOT NULL")]
		public bool ESTADOPREGUNTACUESTIONARIO
		{
			get
			{
				return this._ESTADOPREGUNTACUESTIONARIO;
			}
			set
			{
				if ((this._ESTADOPREGUNTACUESTIONARIO != value))
				{
					this.OnESTADOPREGUNTACUESTIONARIOChanging(value);
					this.SendPropertyChanging();
					this._ESTADOPREGUNTACUESTIONARIO = value;
					this.SendPropertyChanged("ESTADOPREGUNTACUESTIONARIO");
					this.OnESTADOPREGUNTACUESTIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONESCUESTIONARIO", DbType="VarChar(500)")]
		public string OBSERVACIONESCUESTIONARIO
		{
			get
			{
				return this._OBSERVACIONESCUESTIONARIO;
			}
			set
			{
				if ((this._OBSERVACIONESCUESTIONARIO != value))
				{
					this.OnOBSERVACIONESCUESTIONARIOChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONESCUESTIONARIO = value;
					this.SendPropertyChanged("OBSERVACIONESCUESTIONARIO");
					this.OnOBSERVACIONESCUESTIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUESTIONARIO_SOLUCIONCUESTIONARIO", Storage="_SOLUCIONCUESTIONARIO", ThisKey="IDPROCESO,IDOBJETIVO,IDINDICADOR,IDPREGUNTA", OtherKey="IDPROCESO,IDOBJETIVO,IDINDICADOR,IDPREGUNTA")]
		public EntitySet<SOLUCIONCUESTIONARIO> SOLUCIONCUESTIONARIO
		{
			get
			{
				return this._SOLUCIONCUESTIONARIO;
			}
			set
			{
				this._SOLUCIONCUESTIONARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INDICADOR_CUESTIONARIO", Storage="_INDICADOR", ThisKey="IDINDICADOR", OtherKey="IDINDICADOR", IsForeignKey=true)]
		public INDICADOR INDICADOR
		{
			get
			{
				return this._INDICADOR.Entity;
			}
			set
			{
				INDICADOR previousValue = this._INDICADOR.Entity;
				if (((previousValue != value) 
							|| (this._INDICADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INDICADOR.Entity = null;
						previousValue.CUESTIONARIO.Remove(this);
					}
					this._INDICADOR.Entity = value;
					if ((value != null))
					{
						value.CUESTIONARIO.Add(this);
						this._IDINDICADOR = value.IDINDICADOR;
					}
					else
					{
						this._IDINDICADOR = default(int);
					}
					this.SendPropertyChanged("INDICADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJETIVO_CUESTIONARIO", Storage="_OBJETIVO", ThisKey="IDOBJETIVO", OtherKey="IDOBJETIVO", IsForeignKey=true)]
		public OBJETIVO OBJETIVO
		{
			get
			{
				return this._OBJETIVO.Entity;
			}
			set
			{
				OBJETIVO previousValue = this._OBJETIVO.Entity;
				if (((previousValue != value) 
							|| (this._OBJETIVO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJETIVO.Entity = null;
						previousValue.CUESTIONARIO.Remove(this);
					}
					this._OBJETIVO.Entity = value;
					if ((value != null))
					{
						value.CUESTIONARIO.Add(this);
						this._IDOBJETIVO = value.IDOBJETIVO;
					}
					else
					{
						this._IDOBJETIVO = default(int);
					}
					this.SendPropertyChanged("OBJETIVO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREGUNTA_CUESTIONARIO", Storage="_PREGUNTA", ThisKey="IDPREGUNTA", OtherKey="IDPREGUNTA", IsForeignKey=true)]
		public PREGUNTA PREGUNTA
		{
			get
			{
				return this._PREGUNTA.Entity;
			}
			set
			{
				PREGUNTA previousValue = this._PREGUNTA.Entity;
				if (((previousValue != value) 
							|| (this._PREGUNTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PREGUNTA.Entity = null;
						previousValue.CUESTIONARIO.Remove(this);
					}
					this._PREGUNTA.Entity = value;
					if ((value != null))
					{
						value.CUESTIONARIO.Add(this);
						this._IDPREGUNTA = value.IDPREGUNTA;
					}
					else
					{
						this._IDPREGUNTA = default(int);
					}
					this.SendPropertyChanged("PREGUNTA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_CUESTIONARIO", Storage="_PROCESO", ThisKey="IDPROCESO", OtherKey="IDPROCESO", IsForeignKey=true)]
		public PROCESO PROCESO
		{
			get
			{
				return this._PROCESO.Entity;
			}
			set
			{
				PROCESO previousValue = this._PROCESO.Entity;
				if (((previousValue != value) 
							|| (this._PROCESO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROCESO.Entity = null;
						previousValue.CUESTIONARIO.Remove(this);
					}
					this._PROCESO.Entity = value;
					if ((value != null))
					{
						value.CUESTIONARIO.Add(this);
						this._IDPROCESO = value.IDPROCESO;
					}
					else
					{
						this._IDPROCESO = default(int);
					}
					this.SendPropertyChanged("PROCESO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.CUESTIONARIO = this;
		}
		
		private void detach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.CUESTIONARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENFERMEDAD")]
	public partial class ENFERMEDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDENFEREMEDAD;
		
		private string _NOMBRENEFERMEDAD;
		
		private int _ESTADOENFEREMEDAD;
		
		private System.DateTime _FECHAENFERMEDAD;
		
		private EntitySet<CERTIFICADOMEDICO> _CERTIFICADOMEDICO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDENFEREMEDADChanging(int value);
    partial void OnIDENFEREMEDADChanged();
    partial void OnNOMBRENEFERMEDADChanging(string value);
    partial void OnNOMBRENEFERMEDADChanged();
    partial void OnESTADOENFEREMEDADChanging(int value);
    partial void OnESTADOENFEREMEDADChanged();
    partial void OnFECHAENFERMEDADChanging(System.DateTime value);
    partial void OnFECHAENFERMEDADChanged();
    #endregion
		
		public ENFERMEDAD()
		{
			this._CERTIFICADOMEDICO = new EntitySet<CERTIFICADOMEDICO>(new Action<CERTIFICADOMEDICO>(this.attach_CERTIFICADOMEDICO), new Action<CERTIFICADOMEDICO>(this.detach_CERTIFICADOMEDICO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDENFEREMEDAD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDENFEREMEDAD
		{
			get
			{
				return this._IDENFEREMEDAD;
			}
			set
			{
				if ((this._IDENFEREMEDAD != value))
				{
					this.OnIDENFEREMEDADChanging(value);
					this.SendPropertyChanging();
					this._IDENFEREMEDAD = value;
					this.SendPropertyChanged("IDENFEREMEDAD");
					this.OnIDENFEREMEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRENEFERMEDAD", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOMBRENEFERMEDAD
		{
			get
			{
				return this._NOMBRENEFERMEDAD;
			}
			set
			{
				if ((this._NOMBRENEFERMEDAD != value))
				{
					this.OnNOMBRENEFERMEDADChanging(value);
					this.SendPropertyChanging();
					this._NOMBRENEFERMEDAD = value;
					this.SendPropertyChanged("NOMBRENEFERMEDAD");
					this.OnNOMBRENEFERMEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOENFEREMEDAD", DbType="Int NOT NULL")]
		public int ESTADOENFEREMEDAD
		{
			get
			{
				return this._ESTADOENFEREMEDAD;
			}
			set
			{
				if ((this._ESTADOENFEREMEDAD != value))
				{
					this.OnESTADOENFEREMEDADChanging(value);
					this.SendPropertyChanging();
					this._ESTADOENFEREMEDAD = value;
					this.SendPropertyChanged("ESTADOENFEREMEDAD");
					this.OnESTADOENFEREMEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAENFERMEDAD", DbType="DateTime NOT NULL")]
		public System.DateTime FECHAENFERMEDAD
		{
			get
			{
				return this._FECHAENFERMEDAD;
			}
			set
			{
				if ((this._FECHAENFERMEDAD != value))
				{
					this.OnFECHAENFERMEDADChanging(value);
					this.SendPropertyChanging();
					this._FECHAENFERMEDAD = value;
					this.SendPropertyChanged("FECHAENFERMEDAD");
					this.OnFECHAENFERMEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ENFERMEDAD_CERTIFICADOMEDICO", Storage="_CERTIFICADOMEDICO", ThisKey="IDENFEREMEDAD", OtherKey="IDENFEREMEDAD")]
		public EntitySet<CERTIFICADOMEDICO> CERTIFICADOMEDICO
		{
			get
			{
				return this._CERTIFICADOMEDICO;
			}
			set
			{
				this._CERTIFICADOMEDICO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CERTIFICADOMEDICO(CERTIFICADOMEDICO entity)
		{
			this.SendPropertyChanging();
			entity.ENFERMEDAD = this;
		}
		
		private void detach_CERTIFICADOMEDICO(CERTIFICADOMEDICO entity)
		{
			this.SendPropertyChanging();
			entity.ENFERMEDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAMILIA")]
	public partial class FAMILIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFAMILIA;
		
		private System.Nullable<int> _IDTIPOFAMILIA;
		
		private string _NOMBREFAMILIA;
		
		private System.Nullable<int> _MIEMBROSFAMILIA;
		
		private string _OBSERVACIONFAMILIA;
		
		private System.Nullable<System.DateTime> _ANIOINGRESOFAMILIA;
		
		private string _DIRECCIONFAMILIA;
		
		private EntitySet<PERIODO_PERSONA_FAMILIA> _PERIODO_PERSONA_FAMILIA;
		
		private EntitySet<PERSONA_FAMILIA> _PERSONA_FAMILIA;
		
		private EntitySet<VISITADOMICILIAR> _VISITADOMICILIAR;
		
		private EntityRef<TIPOFAMILIA> _TIPOFAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFAMILIAChanging(int value);
    partial void OnIDFAMILIAChanged();
    partial void OnIDTIPOFAMILIAChanging(System.Nullable<int> value);
    partial void OnIDTIPOFAMILIAChanged();
    partial void OnNOMBREFAMILIAChanging(string value);
    partial void OnNOMBREFAMILIAChanged();
    partial void OnMIEMBROSFAMILIAChanging(System.Nullable<int> value);
    partial void OnMIEMBROSFAMILIAChanged();
    partial void OnOBSERVACIONFAMILIAChanging(string value);
    partial void OnOBSERVACIONFAMILIAChanged();
    partial void OnANIOINGRESOFAMILIAChanging(System.Nullable<System.DateTime> value);
    partial void OnANIOINGRESOFAMILIAChanged();
    partial void OnDIRECCIONFAMILIAChanging(string value);
    partial void OnDIRECCIONFAMILIAChanged();
    #endregion
		
		public FAMILIA()
		{
			this._PERIODO_PERSONA_FAMILIA = new EntitySet<PERIODO_PERSONA_FAMILIA>(new Action<PERIODO_PERSONA_FAMILIA>(this.attach_PERIODO_PERSONA_FAMILIA), new Action<PERIODO_PERSONA_FAMILIA>(this.detach_PERIODO_PERSONA_FAMILIA));
			this._PERSONA_FAMILIA = new EntitySet<PERSONA_FAMILIA>(new Action<PERSONA_FAMILIA>(this.attach_PERSONA_FAMILIA), new Action<PERSONA_FAMILIA>(this.detach_PERSONA_FAMILIA));
			this._VISITADOMICILIAR = new EntitySet<VISITADOMICILIAR>(new Action<VISITADOMICILIAR>(this.attach_VISITADOMICILIAR), new Action<VISITADOMICILIAR>(this.detach_VISITADOMICILIAR));
			this._TIPOFAMILIA = default(EntityRef<TIPOFAMILIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFAMILIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFAMILIA
		{
			get
			{
				return this._IDFAMILIA;
			}
			set
			{
				if ((this._IDFAMILIA != value))
				{
					this.OnIDFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDFAMILIA = value;
					this.SendPropertyChanged("IDFAMILIA");
					this.OnIDFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOFAMILIA", DbType="Int")]
		public System.Nullable<int> IDTIPOFAMILIA
		{
			get
			{
				return this._IDTIPOFAMILIA;
			}
			set
			{
				if ((this._IDTIPOFAMILIA != value))
				{
					if (this._TIPOFAMILIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOFAMILIA = value;
					this.SendPropertyChanged("IDTIPOFAMILIA");
					this.OnIDTIPOFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREFAMILIA", DbType="VarChar(50)")]
		public string NOMBREFAMILIA
		{
			get
			{
				return this._NOMBREFAMILIA;
			}
			set
			{
				if ((this._NOMBREFAMILIA != value))
				{
					this.OnNOMBREFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._NOMBREFAMILIA = value;
					this.SendPropertyChanged("NOMBREFAMILIA");
					this.OnNOMBREFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MIEMBROSFAMILIA", DbType="Int")]
		public System.Nullable<int> MIEMBROSFAMILIA
		{
			get
			{
				return this._MIEMBROSFAMILIA;
			}
			set
			{
				if ((this._MIEMBROSFAMILIA != value))
				{
					this.OnMIEMBROSFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._MIEMBROSFAMILIA = value;
					this.SendPropertyChanged("MIEMBROSFAMILIA");
					this.OnMIEMBROSFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONFAMILIA", DbType="VarChar(300)")]
		public string OBSERVACIONFAMILIA
		{
			get
			{
				return this._OBSERVACIONFAMILIA;
			}
			set
			{
				if ((this._OBSERVACIONFAMILIA != value))
				{
					this.OnOBSERVACIONFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONFAMILIA = value;
					this.SendPropertyChanged("OBSERVACIONFAMILIA");
					this.OnOBSERVACIONFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANIOINGRESOFAMILIA", DbType="DateTime")]
		public System.Nullable<System.DateTime> ANIOINGRESOFAMILIA
		{
			get
			{
				return this._ANIOINGRESOFAMILIA;
			}
			set
			{
				if ((this._ANIOINGRESOFAMILIA != value))
				{
					this.OnANIOINGRESOFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._ANIOINGRESOFAMILIA = value;
					this.SendPropertyChanged("ANIOINGRESOFAMILIA");
					this.OnANIOINGRESOFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCIONFAMILIA", DbType="VarChar(300)")]
		public string DIRECCIONFAMILIA
		{
			get
			{
				return this._DIRECCIONFAMILIA;
			}
			set
			{
				if ((this._DIRECCIONFAMILIA != value))
				{
					this.OnDIRECCIONFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._DIRECCIONFAMILIA = value;
					this.SendPropertyChanged("DIRECCIONFAMILIA");
					this.OnDIRECCIONFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_PERIODO_PERSONA_FAMILIA", Storage="_PERIODO_PERSONA_FAMILIA", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA")]
		public EntitySet<PERIODO_PERSONA_FAMILIA> PERIODO_PERSONA_FAMILIA
		{
			get
			{
				return this._PERIODO_PERSONA_FAMILIA;
			}
			set
			{
				this._PERIODO_PERSONA_FAMILIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_PERSONA_FAMILIA", Storage="_PERSONA_FAMILIA", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA")]
		public EntitySet<PERSONA_FAMILIA> PERSONA_FAMILIA
		{
			get
			{
				return this._PERSONA_FAMILIA;
			}
			set
			{
				this._PERSONA_FAMILIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_VISITADOMICILIAR", Storage="_VISITADOMICILIAR", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA")]
		public EntitySet<VISITADOMICILIAR> VISITADOMICILIAR
		{
			get
			{
				return this._VISITADOMICILIAR;
			}
			set
			{
				this._VISITADOMICILIAR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOFAMILIA_FAMILIA", Storage="_TIPOFAMILIA", ThisKey="IDTIPOFAMILIA", OtherKey="IDTIPOFAMILIA", IsForeignKey=true)]
		public TIPOFAMILIA TIPOFAMILIA
		{
			get
			{
				return this._TIPOFAMILIA.Entity;
			}
			set
			{
				TIPOFAMILIA previousValue = this._TIPOFAMILIA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOFAMILIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOFAMILIA.Entity = null;
						previousValue.FAMILIA.Remove(this);
					}
					this._TIPOFAMILIA.Entity = value;
					if ((value != null))
					{
						value.FAMILIA.Add(this);
						this._IDTIPOFAMILIA = value.IDTIPOFAMILIA;
					}
					else
					{
						this._IDTIPOFAMILIA = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOFAMILIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = this;
		}
		
		private void detach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = null;
		}
		
		private void attach_PERSONA_FAMILIA(PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = this;
		}
		
		private void detach_PERSONA_FAMILIA(PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = null;
		}
		
		private void attach_VISITADOMICILIAR(VISITADOMICILIAR entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = this;
		}
		
		private void detach_VISITADOMICILIAR(VISITADOMICILIAR entity)
		{
			this.SendPropertyChanging();
			entity.FAMILIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INDICADOR")]
	public partial class INDICADOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDINDICADOR;
		
		private string _NOMBREINDICADOR;
		
		private bool _ESTADO;
		
		private EntitySet<CUESTIONARIO> _CUESTIONARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDINDICADORChanging(int value);
    partial void OnIDINDICADORChanged();
    partial void OnNOMBREINDICADORChanging(string value);
    partial void OnNOMBREINDICADORChanged();
    partial void OnESTADOChanging(bool value);
    partial void OnESTADOChanged();
    #endregion
		
		public INDICADOR()
		{
			this._CUESTIONARIO = new EntitySet<CUESTIONARIO>(new Action<CUESTIONARIO>(this.attach_CUESTIONARIO), new Action<CUESTIONARIO>(this.detach_CUESTIONARIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDINDICADOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDINDICADOR
		{
			get
			{
				return this._IDINDICADOR;
			}
			set
			{
				if ((this._IDINDICADOR != value))
				{
					this.OnIDINDICADORChanging(value);
					this.SendPropertyChanging();
					this._IDINDICADOR = value;
					this.SendPropertyChanged("IDINDICADOR");
					this.OnIDINDICADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREINDICADOR", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string NOMBREINDICADOR
		{
			get
			{
				return this._NOMBREINDICADOR;
			}
			set
			{
				if ((this._NOMBREINDICADOR != value))
				{
					this.OnNOMBREINDICADORChanging(value);
					this.SendPropertyChanging();
					this._NOMBREINDICADOR = value;
					this.SendPropertyChanged("NOMBREINDICADOR");
					this.OnNOMBREINDICADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO", DbType="Bit NOT NULL")]
		public bool ESTADO
		{
			get
			{
				return this._ESTADO;
			}
			set
			{
				if ((this._ESTADO != value))
				{
					this.OnESTADOChanging(value);
					this.SendPropertyChanging();
					this._ESTADO = value;
					this.SendPropertyChanged("ESTADO");
					this.OnESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INDICADOR_CUESTIONARIO", Storage="_CUESTIONARIO", ThisKey="IDINDICADOR", OtherKey="IDINDICADOR")]
		public EntitySet<CUESTIONARIO> CUESTIONARIO
		{
			get
			{
				return this._CUESTIONARIO;
			}
			set
			{
				this._CUESTIONARIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.INDICADOR = this;
		}
		
		private void detach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.INDICADOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOVEN")]
	public partial class JOVEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERSONA;
		
		private int _IDMENOREDAD;
		
		private string _IDJOVEN;
		
		private EntityRef<MENOREDAD> _MENOREDAD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDMENOREDADChanging(int value);
    partial void OnIDMENOREDADChanged();
    partial void OnIDJOVENChanging(string value);
    partial void OnIDJOVENChanged();
    #endregion
		
		public JOVEN()
		{
			this._MENOREDAD = default(EntityRef<MENOREDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMENOREDAD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMENOREDAD
		{
			get
			{
				return this._IDMENOREDAD;
			}
			set
			{
				if ((this._IDMENOREDAD != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._IDMENOREDAD = value;
					this.SendPropertyChanged("IDMENOREDAD");
					this.OnIDMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDJOVEN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDJOVEN
		{
			get
			{
				return this._IDJOVEN;
			}
			set
			{
				if ((this._IDJOVEN != value))
				{
					this.OnIDJOVENChanging(value);
					this.SendPropertyChanging();
					this._IDJOVEN = value;
					this.SendPropertyChanged("IDJOVEN");
					this.OnIDJOVENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_JOVEN", Storage="_MENOREDAD", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD", IsForeignKey=true)]
		public MENOREDAD MENOREDAD
		{
			get
			{
				return this._MENOREDAD.Entity;
			}
			set
			{
				MENOREDAD previousValue = this._MENOREDAD.Entity;
				if (((previousValue != value) 
							|| (this._MENOREDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENOREDAD.Entity = null;
						previousValue.JOVEN.Remove(this);
					}
					this._MENOREDAD.Entity = value;
					if ((value != null))
					{
						value.JOVEN.Add(this);
						this._IDPERSONA = value.IDPERSONA;
						this._IDMENOREDAD = value.IDMENOREDAD;
					}
					else
					{
						this._IDPERSONA = default(int);
						this._IDMENOREDAD = default(int);
					}
					this.SendPropertyChanged("MENOREDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LINEADEACCION")]
	public partial class LINEADEACCION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLINEADEACCION;
		
		private string _NOMBRELINEADEACCION;
		
		private string _DESCRIPCIONLINEADEACCION;
		
		private int _IDTIPOPERSONA;
		
		private EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntityRef<TIPOPERSONA> _TIPOPERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLINEADEACCIONChanging(int value);
    partial void OnIDLINEADEACCIONChanged();
    partial void OnNOMBRELINEADEACCIONChanging(string value);
    partial void OnNOMBRELINEADEACCIONChanged();
    partial void OnDESCRIPCIONLINEADEACCIONChanging(string value);
    partial void OnDESCRIPCIONLINEADEACCIONChanged();
    partial void OnIDTIPOPERSONAChanging(int value);
    partial void OnIDTIPOPERSONAChanged();
    #endregion
		
		public LINEADEACCION()
		{
			this._ORIENTADORACARGODEPROCESOENPERIODO = new EntitySet<ORIENTADORACARGODEPROCESOENPERIODO>(new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.attach_ORIENTADORACARGODEPROCESOENPERIODO), new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.detach_ORIENTADORACARGODEPROCESOENPERIODO));
			this._TIPOPERSONA = default(EntityRef<TIPOPERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEADEACCION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLINEADEACCION
		{
			get
			{
				return this._IDLINEADEACCION;
			}
			set
			{
				if ((this._IDLINEADEACCION != value))
				{
					this.OnIDLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._IDLINEADEACCION = value;
					this.SendPropertyChanged("IDLINEADEACCION");
					this.OnIDLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRELINEADEACCION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRELINEADEACCION
		{
			get
			{
				return this._NOMBRELINEADEACCION;
			}
			set
			{
				if ((this._NOMBRELINEADEACCION != value))
				{
					this.OnNOMBRELINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._NOMBRELINEADEACCION = value;
					this.SendPropertyChanged("NOMBRELINEADEACCION");
					this.OnNOMBRELINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCIONLINEADEACCION", DbType="VarChar(200)")]
		public string DESCRIPCIONLINEADEACCION
		{
			get
			{
				return this._DESCRIPCIONLINEADEACCION;
			}
			set
			{
				if ((this._DESCRIPCIONLINEADEACCION != value))
				{
					this.OnDESCRIPCIONLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCIONLINEADEACCION = value;
					this.SendPropertyChanged("DESCRIPCIONLINEADEACCION");
					this.OnDESCRIPCIONLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPERSONA", DbType="Int NOT NULL")]
		public int IDTIPOPERSONA
		{
			get
			{
				return this._IDTIPOPERSONA;
			}
			set
			{
				if ((this._IDTIPOPERSONA != value))
				{
					if (this._TIPOPERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPERSONA = value;
					this.SendPropertyChanged("IDTIPOPERSONA");
					this.OnIDTIPOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINEADEACCION_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDLINEADEACCION", OtherKey="IDLINEADEACCION")]
		public EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO;
			}
			set
			{
				this._ORIENTADORACARGODEPROCESOENPERIODO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPERSONA_LINEADEACCION", Storage="_TIPOPERSONA", ThisKey="IDTIPOPERSONA", OtherKey="IDTIPOPERSONA", IsForeignKey=true)]
		public TIPOPERSONA TIPOPERSONA
		{
			get
			{
				return this._TIPOPERSONA.Entity;
			}
			set
			{
				TIPOPERSONA previousValue = this._TIPOPERSONA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOPERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOPERSONA.Entity = null;
						previousValue.LINEADEACCION.Remove(this);
					}
					this._TIPOPERSONA.Entity = value;
					if ((value != null))
					{
						value.LINEADEACCION.Add(this);
						this._IDTIPOPERSONA = value.IDTIPOPERSONA;
					}
					else
					{
						this._IDTIPOPERSONA = default(int);
					}
					this.SendPropertyChanged("TIPOPERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.LINEADEACCION = this;
		}
		
		private void detach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.LINEADEACCION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATRICULA")]
	public partial class MATRICULA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMATRICULA;
		
		private int _IDLINEADEACCION;
		
		private int _IDORIENTADOR;
		
		private int _IDPROCESO;
		
		private int _IDPERIODO;
		
		private int _IDPERSONA;
		
		private EntityRef<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMATRICULAChanging(int value);
    partial void OnIDMATRICULAChanged();
    partial void OnIDLINEADEACCIONChanging(int value);
    partial void OnIDLINEADEACCIONChanged();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    #endregion
		
		public MATRICULA()
		{
			this._ORIENTADORACARGODEPROCESOENPERIODO = default(EntityRef<ORIENTADORACARGODEPROCESOENPERIODO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMATRICULA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMATRICULA
		{
			get
			{
				return this._IDMATRICULA;
			}
			set
			{
				if ((this._IDMATRICULA != value))
				{
					this.OnIDMATRICULAChanging(value);
					this.SendPropertyChanging();
					this._IDMATRICULA = value;
					this.SendPropertyChanged("IDMATRICULA");
					this.OnIDMATRICULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEADEACCION", DbType="Int NOT NULL")]
		public int IDLINEADEACCION
		{
			get
			{
				return this._IDLINEADEACCION;
			}
			set
			{
				if ((this._IDLINEADEACCION != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._IDLINEADEACCION = value;
					this.SendPropertyChanged("IDLINEADEACCION");
					this.OnIDLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL")]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL")]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL")]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_MATRICULA", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", IsForeignKey=true)]
		public ORIENTADORACARGODEPROCESOENPERIODO ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
			}
			set
			{
				ORIENTADORACARGODEPROCESOENPERIODO previousValue = this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = null;
						previousValue.MATRICULA.Remove(this);
					}
					this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = value;
					if ((value != null))
					{
						value.MATRICULA.Add(this);
						this._IDLINEADEACCION = value.IDLINEADEACCION;
						this._IDORIENTADOR = value.IDORIENTADOR;
						this._IDPROCESO = value.IDPROCESO;
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDLINEADEACCION = default(int);
						this._IDORIENTADOR = default(int);
						this._IDPROCESO = default(int);
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("ORIENTADORACARGODEPROCESOENPERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_MATRICULA", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.MATRICULA.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.MATRICULA.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENOREDAD")]
	public partial class MENOREDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERSONA;
		
		private int _IDMENOREDAD;
		
		private string _CODIGOSADMENOREDAD;
		
		private int _ANIOINGRESOMENOREDAD;
		
		private decimal _PESOMENOREDAD;
		
		private decimal _TALLAMENOREDAD;
		
		private string _DISCAPACIDADESMENOREDAD;
		
		private bool _VACUNASMENOREDAD;
		
		private int _ALIMENTACIONMENOREDAD;
		
		private int _NOMBREENCARGADOMENOREDAD;
		
		private string _SACRAMENTOMENOREDAD;
		
		private System.Nullable<int> _IDREPRESENTANTE;
		
		private EntitySet<CERTIFICADOMEDICO> _CERTIFICADOMEDICO;
		
		private EntitySet<JOVEN> _JOVEN;
		
		private EntitySet<NINIO> _NINIO;
		
		private EntityRef<PERSONA> _PERSONA;
		
		private EntityRef<REPRESENTANTE> _REPRESENTANTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDMENOREDADChanging(int value);
    partial void OnIDMENOREDADChanged();
    partial void OnCODIGOSADMENOREDADChanging(string value);
    partial void OnCODIGOSADMENOREDADChanged();
    partial void OnANIOINGRESOMENOREDADChanging(int value);
    partial void OnANIOINGRESOMENOREDADChanged();
    partial void OnPESOMENOREDADChanging(decimal value);
    partial void OnPESOMENOREDADChanged();
    partial void OnTALLAMENOREDADChanging(decimal value);
    partial void OnTALLAMENOREDADChanged();
    partial void OnDISCAPACIDADESMENOREDADChanging(string value);
    partial void OnDISCAPACIDADESMENOREDADChanged();
    partial void OnVACUNASMENOREDADChanging(bool value);
    partial void OnVACUNASMENOREDADChanged();
    partial void OnALIMENTACIONMENOREDADChanging(int value);
    partial void OnALIMENTACIONMENOREDADChanged();
    partial void OnNOMBREENCARGADOMENOREDADChanging(int value);
    partial void OnNOMBREENCARGADOMENOREDADChanged();
    partial void OnSACRAMENTOMENOREDADChanging(string value);
    partial void OnSACRAMENTOMENOREDADChanged();
    partial void OnIDREPRESENTANTEChanging(System.Nullable<int> value);
    partial void OnIDREPRESENTANTEChanged();
    #endregion
		
		public MENOREDAD()
		{
			this._CERTIFICADOMEDICO = new EntitySet<CERTIFICADOMEDICO>(new Action<CERTIFICADOMEDICO>(this.attach_CERTIFICADOMEDICO), new Action<CERTIFICADOMEDICO>(this.detach_CERTIFICADOMEDICO));
			this._JOVEN = new EntitySet<JOVEN>(new Action<JOVEN>(this.attach_JOVEN), new Action<JOVEN>(this.detach_JOVEN));
			this._NINIO = new EntitySet<NINIO>(new Action<NINIO>(this.attach_NINIO), new Action<NINIO>(this.detach_NINIO));
			this._PERSONA = default(EntityRef<PERSONA>);
			this._REPRESENTANTE = default(EntityRef<REPRESENTANTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMENOREDAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMENOREDAD
		{
			get
			{
				return this._IDMENOREDAD;
			}
			set
			{
				if ((this._IDMENOREDAD != value))
				{
					this.OnIDMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._IDMENOREDAD = value;
					this.SendPropertyChanged("IDMENOREDAD");
					this.OnIDMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOSADMENOREDAD", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string CODIGOSADMENOREDAD
		{
			get
			{
				return this._CODIGOSADMENOREDAD;
			}
			set
			{
				if ((this._CODIGOSADMENOREDAD != value))
				{
					this.OnCODIGOSADMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._CODIGOSADMENOREDAD = value;
					this.SendPropertyChanged("CODIGOSADMENOREDAD");
					this.OnCODIGOSADMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANIOINGRESOMENOREDAD", DbType="Int NOT NULL")]
		public int ANIOINGRESOMENOREDAD
		{
			get
			{
				return this._ANIOINGRESOMENOREDAD;
			}
			set
			{
				if ((this._ANIOINGRESOMENOREDAD != value))
				{
					this.OnANIOINGRESOMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._ANIOINGRESOMENOREDAD = value;
					this.SendPropertyChanged("ANIOINGRESOMENOREDAD");
					this.OnANIOINGRESOMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESOMENOREDAD", DbType="Decimal(10,2) NOT NULL")]
		public decimal PESOMENOREDAD
		{
			get
			{
				return this._PESOMENOREDAD;
			}
			set
			{
				if ((this._PESOMENOREDAD != value))
				{
					this.OnPESOMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._PESOMENOREDAD = value;
					this.SendPropertyChanged("PESOMENOREDAD");
					this.OnPESOMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TALLAMENOREDAD", DbType="Decimal(10,2) NOT NULL")]
		public decimal TALLAMENOREDAD
		{
			get
			{
				return this._TALLAMENOREDAD;
			}
			set
			{
				if ((this._TALLAMENOREDAD != value))
				{
					this.OnTALLAMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._TALLAMENOREDAD = value;
					this.SendPropertyChanged("TALLAMENOREDAD");
					this.OnTALLAMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISCAPACIDADESMENOREDAD", DbType="VarChar(200)")]
		public string DISCAPACIDADESMENOREDAD
		{
			get
			{
				return this._DISCAPACIDADESMENOREDAD;
			}
			set
			{
				if ((this._DISCAPACIDADESMENOREDAD != value))
				{
					this.OnDISCAPACIDADESMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._DISCAPACIDADESMENOREDAD = value;
					this.SendPropertyChanged("DISCAPACIDADESMENOREDAD");
					this.OnDISCAPACIDADESMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VACUNASMENOREDAD", DbType="Bit NOT NULL")]
		public bool VACUNASMENOREDAD
		{
			get
			{
				return this._VACUNASMENOREDAD;
			}
			set
			{
				if ((this._VACUNASMENOREDAD != value))
				{
					this.OnVACUNASMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._VACUNASMENOREDAD = value;
					this.SendPropertyChanged("VACUNASMENOREDAD");
					this.OnVACUNASMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALIMENTACIONMENOREDAD", DbType="Int NOT NULL")]
		public int ALIMENTACIONMENOREDAD
		{
			get
			{
				return this._ALIMENTACIONMENOREDAD;
			}
			set
			{
				if ((this._ALIMENTACIONMENOREDAD != value))
				{
					this.OnALIMENTACIONMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._ALIMENTACIONMENOREDAD = value;
					this.SendPropertyChanged("ALIMENTACIONMENOREDAD");
					this.OnALIMENTACIONMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREENCARGADOMENOREDAD", DbType="Int NOT NULL")]
		public int NOMBREENCARGADOMENOREDAD
		{
			get
			{
				return this._NOMBREENCARGADOMENOREDAD;
			}
			set
			{
				if ((this._NOMBREENCARGADOMENOREDAD != value))
				{
					this.OnNOMBREENCARGADOMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._NOMBREENCARGADOMENOREDAD = value;
					this.SendPropertyChanged("NOMBREENCARGADOMENOREDAD");
					this.OnNOMBREENCARGADOMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SACRAMENTOMENOREDAD", DbType="VarChar(200)")]
		public string SACRAMENTOMENOREDAD
		{
			get
			{
				return this._SACRAMENTOMENOREDAD;
			}
			set
			{
				if ((this._SACRAMENTOMENOREDAD != value))
				{
					this.OnSACRAMENTOMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._SACRAMENTOMENOREDAD = value;
					this.SendPropertyChanged("SACRAMENTOMENOREDAD");
					this.OnSACRAMENTOMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREPRESENTANTE", DbType="Int")]
		public System.Nullable<int> IDREPRESENTANTE
		{
			get
			{
				return this._IDREPRESENTANTE;
			}
			set
			{
				if ((this._IDREPRESENTANTE != value))
				{
					if (this._REPRESENTANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._IDREPRESENTANTE = value;
					this.SendPropertyChanged("IDREPRESENTANTE");
					this.OnIDREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_CERTIFICADOMEDICO", Storage="_CERTIFICADOMEDICO", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD")]
		public EntitySet<CERTIFICADOMEDICO> CERTIFICADOMEDICO
		{
			get
			{
				return this._CERTIFICADOMEDICO;
			}
			set
			{
				this._CERTIFICADOMEDICO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_JOVEN", Storage="_JOVEN", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD")]
		public EntitySet<JOVEN> JOVEN
		{
			get
			{
				return this._JOVEN;
			}
			set
			{
				this._JOVEN.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_NINIO", Storage="_NINIO", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD")]
		public EntitySet<NINIO> NINIO
		{
			get
			{
				return this._NINIO;
			}
			set
			{
				this._NINIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_MENOREDAD", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.MENOREDAD.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.MENOREDAD.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REPRESENTANTE_MENOREDAD", Storage="_REPRESENTANTE", ThisKey="IDREPRESENTANTE", OtherKey="IDREPRESENTANTE", IsForeignKey=true)]
		public REPRESENTANTE REPRESENTANTE
		{
			get
			{
				return this._REPRESENTANTE.Entity;
			}
			set
			{
				REPRESENTANTE previousValue = this._REPRESENTANTE.Entity;
				if (((previousValue != value) 
							|| (this._REPRESENTANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REPRESENTANTE.Entity = null;
						previousValue.MENOREDAD.Remove(this);
					}
					this._REPRESENTANTE.Entity = value;
					if ((value != null))
					{
						value.MENOREDAD.Add(this);
						this._IDREPRESENTANTE = value.IDREPRESENTANTE;
					}
					else
					{
						this._IDREPRESENTANTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("REPRESENTANTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CERTIFICADOMEDICO(CERTIFICADOMEDICO entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = this;
		}
		
		private void detach_CERTIFICADOMEDICO(CERTIFICADOMEDICO entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = null;
		}
		
		private void attach_JOVEN(JOVEN entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = this;
		}
		
		private void detach_JOVEN(JOVEN entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = null;
		}
		
		private void attach_NINIO(NINIO entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = this;
		}
		
		private void detach_NINIO(NINIO entity)
		{
			this.SendPropertyChanging();
			entity.MENOREDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NINIO")]
	public partial class NINIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERSONA;
		
		private int _IDMENOREDAD;
		
		private int _IDNINIO;
		
		private System.Nullable<bool> _TRABAJONINIO;
		
		private System.Nullable<int> _TIEMPOTRABAJONINIO;
		
		private EntityRef<MENOREDAD> _MENOREDAD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDMENOREDADChanging(int value);
    partial void OnIDMENOREDADChanged();
    partial void OnIDNINIOChanging(int value);
    partial void OnIDNINIOChanged();
    partial void OnTRABAJONINIOChanging(System.Nullable<bool> value);
    partial void OnTRABAJONINIOChanged();
    partial void OnTIEMPOTRABAJONINIOChanging(System.Nullable<int> value);
    partial void OnTIEMPOTRABAJONINIOChanged();
    #endregion
		
		public NINIO()
		{
			this._MENOREDAD = default(EntityRef<MENOREDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMENOREDAD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMENOREDAD
		{
			get
			{
				return this._IDMENOREDAD;
			}
			set
			{
				if ((this._IDMENOREDAD != value))
				{
					if (this._MENOREDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMENOREDADChanging(value);
					this.SendPropertyChanging();
					this._IDMENOREDAD = value;
					this.SendPropertyChanged("IDMENOREDAD");
					this.OnIDMENOREDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNINIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNINIO
		{
			get
			{
				return this._IDNINIO;
			}
			set
			{
				if ((this._IDNINIO != value))
				{
					this.OnIDNINIOChanging(value);
					this.SendPropertyChanging();
					this._IDNINIO = value;
					this.SendPropertyChanged("IDNINIO");
					this.OnIDNINIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRABAJONINIO", DbType="Bit")]
		public System.Nullable<bool> TRABAJONINIO
		{
			get
			{
				return this._TRABAJONINIO;
			}
			set
			{
				if ((this._TRABAJONINIO != value))
				{
					this.OnTRABAJONINIOChanging(value);
					this.SendPropertyChanging();
					this._TRABAJONINIO = value;
					this.SendPropertyChanged("TRABAJONINIO");
					this.OnTRABAJONINIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEMPOTRABAJONINIO", DbType="Int")]
		public System.Nullable<int> TIEMPOTRABAJONINIO
		{
			get
			{
				return this._TIEMPOTRABAJONINIO;
			}
			set
			{
				if ((this._TIEMPOTRABAJONINIO != value))
				{
					this.OnTIEMPOTRABAJONINIOChanging(value);
					this.SendPropertyChanging();
					this._TIEMPOTRABAJONINIO = value;
					this.SendPropertyChanged("TIEMPOTRABAJONINIO");
					this.OnTIEMPOTRABAJONINIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENOREDAD_NINIO", Storage="_MENOREDAD", ThisKey="IDPERSONA,IDMENOREDAD", OtherKey="IDPERSONA,IDMENOREDAD", IsForeignKey=true)]
		public MENOREDAD MENOREDAD
		{
			get
			{
				return this._MENOREDAD.Entity;
			}
			set
			{
				MENOREDAD previousValue = this._MENOREDAD.Entity;
				if (((previousValue != value) 
							|| (this._MENOREDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENOREDAD.Entity = null;
						previousValue.NINIO.Remove(this);
					}
					this._MENOREDAD.Entity = value;
					if ((value != null))
					{
						value.NINIO.Add(this);
						this._IDPERSONA = value.IDPERSONA;
						this._IDMENOREDAD = value.IDMENOREDAD;
					}
					else
					{
						this._IDPERSONA = default(int);
						this._IDMENOREDAD = default(int);
					}
					this.SendPropertyChanged("MENOREDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJETIVO")]
	public partial class OBJETIVO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDOBJETIVO;
		
		private string _NOMBREOBJETIVO;
		
		private bool _ESTADOOBJETIVO;
		
		private EntitySet<CUESTIONARIO> _CUESTIONARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOBJETIVOChanging(int value);
    partial void OnIDOBJETIVOChanged();
    partial void OnNOMBREOBJETIVOChanging(string value);
    partial void OnNOMBREOBJETIVOChanged();
    partial void OnESTADOOBJETIVOChanging(bool value);
    partial void OnESTADOOBJETIVOChanged();
    #endregion
		
		public OBJETIVO()
		{
			this._CUESTIONARIO = new EntitySet<CUESTIONARIO>(new Action<CUESTIONARIO>(this.attach_CUESTIONARIO), new Action<CUESTIONARIO>(this.detach_CUESTIONARIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOBJETIVO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDOBJETIVO
		{
			get
			{
				return this._IDOBJETIVO;
			}
			set
			{
				if ((this._IDOBJETIVO != value))
				{
					this.OnIDOBJETIVOChanging(value);
					this.SendPropertyChanging();
					this._IDOBJETIVO = value;
					this.SendPropertyChanged("IDOBJETIVO");
					this.OnIDOBJETIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREOBJETIVO", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string NOMBREOBJETIVO
		{
			get
			{
				return this._NOMBREOBJETIVO;
			}
			set
			{
				if ((this._NOMBREOBJETIVO != value))
				{
					this.OnNOMBREOBJETIVOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREOBJETIVO = value;
					this.SendPropertyChanged("NOMBREOBJETIVO");
					this.OnNOMBREOBJETIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOOBJETIVO", DbType="Bit NOT NULL")]
		public bool ESTADOOBJETIVO
		{
			get
			{
				return this._ESTADOOBJETIVO;
			}
			set
			{
				if ((this._ESTADOOBJETIVO != value))
				{
					this.OnESTADOOBJETIVOChanging(value);
					this.SendPropertyChanging();
					this._ESTADOOBJETIVO = value;
					this.SendPropertyChanged("ESTADOOBJETIVO");
					this.OnESTADOOBJETIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJETIVO_CUESTIONARIO", Storage="_CUESTIONARIO", ThisKey="IDOBJETIVO", OtherKey="IDOBJETIVO")]
		public EntitySet<CUESTIONARIO> CUESTIONARIO
		{
			get
			{
				return this._CUESTIONARIO;
			}
			set
			{
				this._CUESTIONARIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.OBJETIVO = this;
		}
		
		private void detach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.OBJETIVO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OCUPACION")]
	public partial class OCUPACION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDALIMENTACION2;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _ESTADOTIPOPREGUNTA;
		
		private System.Nullable<System.DateTime> _FECHATIPOPREGUNTA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDALIMENTACION2Changing(int value);
    partial void OnIDALIMENTACION2Changed();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnESTADOTIPOPREGUNTAChanging(System.Nullable<int> value);
    partial void OnESTADOTIPOPREGUNTAChanged();
    partial void OnFECHATIPOPREGUNTAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHATIPOPREGUNTAChanged();
    #endregion
		
		public OCUPACION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDALIMENTACION2", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDALIMENTACION2
		{
			get
			{
				return this._IDALIMENTACION2;
			}
			set
			{
				if ((this._IDALIMENTACION2 != value))
				{
					this.OnIDALIMENTACION2Changing(value);
					this.SendPropertyChanging();
					this._IDALIMENTACION2 = value;
					this.SendPropertyChanged("IDALIMENTACION2");
					this.OnIDALIMENTACION2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOTIPOPREGUNTA", DbType="Int")]
		public System.Nullable<int> ESTADOTIPOPREGUNTA
		{
			get
			{
				return this._ESTADOTIPOPREGUNTA;
			}
			set
			{
				if ((this._ESTADOTIPOPREGUNTA != value))
				{
					this.OnESTADOTIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._ESTADOTIPOPREGUNTA = value;
					this.SendPropertyChanged("ESTADOTIPOPREGUNTA");
					this.OnESTADOTIPOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHATIPOPREGUNTA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHATIPOPREGUNTA
		{
			get
			{
				return this._FECHATIPOPREGUNTA;
			}
			set
			{
				if ((this._FECHATIPOPREGUNTA != value))
				{
					this.OnFECHATIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._FECHATIPOPREGUNTA = value;
					this.SendPropertyChanged("FECHATIPOPREGUNTA");
					this.OnFECHATIPOPREGUNTAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORIENTADOR")]
	public partial class ORIENTADOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDORIENTADOR;
		
		private System.Guid _USERIDASP;
		
		private string _NOMBREORIENTADOR;
		
		private string _APELLIDOORIENTADOR;
		
		private System.Nullable<char> _GENEROORIENTADOR;
		
		private bool _ESTADOORIENTADOR;
		
		private EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntitySet<PROCESO_ORIENTADOR> _PROCESO_ORIENTADOR;
		
		private EntitySet<REPRESENTANTE> _REPRESENTANTE;
		
		private EntityRef<aspnet_Users> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnUSERIDASPChanging(System.Guid value);
    partial void OnUSERIDASPChanged();
    partial void OnNOMBREORIENTADORChanging(string value);
    partial void OnNOMBREORIENTADORChanged();
    partial void OnAPELLIDOORIENTADORChanging(string value);
    partial void OnAPELLIDOORIENTADORChanged();
    partial void OnGENEROORIENTADORChanging(System.Nullable<char> value);
    partial void OnGENEROORIENTADORChanged();
    partial void OnESTADOORIENTADORChanging(bool value);
    partial void OnESTADOORIENTADORChanged();
    #endregion
		
		public ORIENTADOR()
		{
			this._ORIENTADORACARGODEPROCESOENPERIODO = new EntitySet<ORIENTADORACARGODEPROCESOENPERIODO>(new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.attach_ORIENTADORACARGODEPROCESOENPERIODO), new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.detach_ORIENTADORACARGODEPROCESOENPERIODO));
			this._PROCESO_ORIENTADOR = new EntitySet<PROCESO_ORIENTADOR>(new Action<PROCESO_ORIENTADOR>(this.attach_PROCESO_ORIENTADOR), new Action<PROCESO_ORIENTADOR>(this.detach_PROCESO_ORIENTADOR));
			this._REPRESENTANTE = new EntitySet<REPRESENTANTE>(new Action<REPRESENTANTE>(this.attach_REPRESENTANTE), new Action<REPRESENTANTE>(this.detach_REPRESENTANTE));
			this._aspnet_Users = default(EntityRef<aspnet_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERIDASP", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USERIDASP
		{
			get
			{
				return this._USERIDASP;
			}
			set
			{
				if ((this._USERIDASP != value))
				{
					if (this._aspnet_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDASPChanging(value);
					this.SendPropertyChanging();
					this._USERIDASP = value;
					this.SendPropertyChanged("USERIDASP");
					this.OnUSERIDASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREORIENTADOR", DbType="VarChar(50)")]
		public string NOMBREORIENTADOR
		{
			get
			{
				return this._NOMBREORIENTADOR;
			}
			set
			{
				if ((this._NOMBREORIENTADOR != value))
				{
					this.OnNOMBREORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._NOMBREORIENTADOR = value;
					this.SendPropertyChanged("NOMBREORIENTADOR");
					this.OnNOMBREORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDOORIENTADOR", DbType="VarChar(50)")]
		public string APELLIDOORIENTADOR
		{
			get
			{
				return this._APELLIDOORIENTADOR;
			}
			set
			{
				if ((this._APELLIDOORIENTADOR != value))
				{
					this.OnAPELLIDOORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._APELLIDOORIENTADOR = value;
					this.SendPropertyChanged("APELLIDOORIENTADOR");
					this.OnAPELLIDOORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENEROORIENTADOR", DbType="Char(1)")]
		public System.Nullable<char> GENEROORIENTADOR
		{
			get
			{
				return this._GENEROORIENTADOR;
			}
			set
			{
				if ((this._GENEROORIENTADOR != value))
				{
					this.OnGENEROORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._GENEROORIENTADOR = value;
					this.SendPropertyChanged("GENEROORIENTADOR");
					this.OnGENEROORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOORIENTADOR", DbType="Bit NOT NULL")]
		public bool ESTADOORIENTADOR
		{
			get
			{
				return this._ESTADOORIENTADOR;
			}
			set
			{
				if ((this._ESTADOORIENTADOR != value))
				{
					this.OnESTADOORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._ESTADOORIENTADOR = value;
					this.SendPropertyChanged("ESTADOORIENTADOR");
					this.OnESTADOORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR")]
		public EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO;
			}
			set
			{
				this._ORIENTADORACARGODEPROCESOENPERIODO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_PROCESO_ORIENTADOR", Storage="_PROCESO_ORIENTADOR", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR")]
		public EntitySet<PROCESO_ORIENTADOR> PROCESO_ORIENTADOR
		{
			get
			{
				return this._PROCESO_ORIENTADOR;
			}
			set
			{
				this._PROCESO_ORIENTADOR.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_REPRESENTANTE", Storage="_REPRESENTANTE", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR")]
		public EntitySet<REPRESENTANTE> REPRESENTANTE
		{
			get
			{
				return this._REPRESENTANTE;
			}
			set
			{
				this._REPRESENTANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Users_ORIENTADOR", Storage="_aspnet_Users", ThisKey="USERIDASP", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Users aspnet_Users
		{
			get
			{
				return this._aspnet_Users.Entity;
			}
			set
			{
				aspnet_Users previousValue = this._aspnet_Users.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Users.Entity = null;
						previousValue.ORIENTADOR.Remove(this);
					}
					this._aspnet_Users.Entity = value;
					if ((value != null))
					{
						value.ORIENTADOR.Add(this);
						this._USERIDASP = value.UserId;
					}
					else
					{
						this._USERIDASP = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = this;
		}
		
		private void detach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = null;
		}
		
		private void attach_PROCESO_ORIENTADOR(PROCESO_ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = this;
		}
		
		private void detach_PROCESO_ORIENTADOR(PROCESO_ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = null;
		}
		
		private void attach_REPRESENTANTE(REPRESENTANTE entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = this;
		}
		
		private void detach_REPRESENTANTE(REPRESENTANTE entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORIENTADORACARGODEPROCESOENPERIODO")]
	public partial class ORIENTADORACARGODEPROCESOENPERIODO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLINEADEACCION;
		
		private int _IDORIENTADOR;
		
		private int _IDPROCESO;
		
		private int _IDPERIODO;
		
		private string _OBSERVACION;
		
		private EntitySet<ASISTENCIA> _ASISTENCIA;
		
		private EntitySet<MATRICULA> _MATRICULA;
		
		private EntitySet<REUNION> _REUNION;
		
		private EntityRef<LINEADEACCION> _LINEADEACCION;
		
		private EntityRef<ORIENTADOR> _ORIENTADOR;
		
		private EntityRef<PERIODO> _PERIODO;
		
		private EntityRef<PROCESO> _PROCESO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLINEADEACCIONChanging(int value);
    partial void OnIDLINEADEACCIONChanged();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnOBSERVACIONChanging(string value);
    partial void OnOBSERVACIONChanged();
    #endregion
		
		public ORIENTADORACARGODEPROCESOENPERIODO()
		{
			this._ASISTENCIA = new EntitySet<ASISTENCIA>(new Action<ASISTENCIA>(this.attach_ASISTENCIA), new Action<ASISTENCIA>(this.detach_ASISTENCIA));
			this._MATRICULA = new EntitySet<MATRICULA>(new Action<MATRICULA>(this.attach_MATRICULA), new Action<MATRICULA>(this.detach_MATRICULA));
			this._REUNION = new EntitySet<REUNION>(new Action<REUNION>(this.attach_REUNION), new Action<REUNION>(this.detach_REUNION));
			this._LINEADEACCION = default(EntityRef<LINEADEACCION>);
			this._ORIENTADOR = default(EntityRef<ORIENTADOR>);
			this._PERIODO = default(EntityRef<PERIODO>);
			this._PROCESO = default(EntityRef<PROCESO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEADEACCION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLINEADEACCION
		{
			get
			{
				return this._IDLINEADEACCION;
			}
			set
			{
				if ((this._IDLINEADEACCION != value))
				{
					if (this._LINEADEACCION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._IDLINEADEACCION = value;
					this.SendPropertyChanged("IDLINEADEACCION");
					this.OnIDLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._PROCESO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._PERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACION", DbType="VarChar(255)")]
		public string OBSERVACION
		{
			get
			{
				return this._OBSERVACION;
			}
			set
			{
				if ((this._OBSERVACION != value))
				{
					this.OnOBSERVACIONChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACION = value;
					this.SendPropertyChanged("OBSERVACION");
					this.OnOBSERVACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_ASISTENCIA", Storage="_ASISTENCIA", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO")]
		public EntitySet<ASISTENCIA> ASISTENCIA
		{
			get
			{
				return this._ASISTENCIA;
			}
			set
			{
				this._ASISTENCIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_MATRICULA", Storage="_MATRICULA", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO")]
		public EntitySet<MATRICULA> MATRICULA
		{
			get
			{
				return this._MATRICULA;
			}
			set
			{
				this._MATRICULA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_REUNION", Storage="_REUNION", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO")]
		public EntitySet<REUNION> REUNION
		{
			get
			{
				return this._REUNION;
			}
			set
			{
				this._REUNION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LINEADEACCION_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_LINEADEACCION", ThisKey="IDLINEADEACCION", OtherKey="IDLINEADEACCION", IsForeignKey=true)]
		public LINEADEACCION LINEADEACCION
		{
			get
			{
				return this._LINEADEACCION.Entity;
			}
			set
			{
				LINEADEACCION previousValue = this._LINEADEACCION.Entity;
				if (((previousValue != value) 
							|| (this._LINEADEACCION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LINEADEACCION.Entity = null;
						previousValue.ORIENTADORACARGODEPROCESOENPERIODO.Remove(this);
					}
					this._LINEADEACCION.Entity = value;
					if ((value != null))
					{
						value.ORIENTADORACARGODEPROCESOENPERIODO.Add(this);
						this._IDLINEADEACCION = value.IDLINEADEACCION;
					}
					else
					{
						this._IDLINEADEACCION = default(int);
					}
					this.SendPropertyChanged("LINEADEACCION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_ORIENTADOR", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR", IsForeignKey=true)]
		public ORIENTADOR ORIENTADOR
		{
			get
			{
				return this._ORIENTADOR.Entity;
			}
			set
			{
				ORIENTADOR previousValue = this._ORIENTADOR.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADOR.Entity = null;
						previousValue.ORIENTADORACARGODEPROCESOENPERIODO.Remove(this);
					}
					this._ORIENTADOR.Entity = value;
					if ((value != null))
					{
						value.ORIENTADORACARGODEPROCESOENPERIODO.Add(this);
						this._IDORIENTADOR = value.IDORIENTADOR;
					}
					else
					{
						this._IDORIENTADOR = default(int);
					}
					this.SendPropertyChanged("ORIENTADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_PERIODO", ThisKey="IDPERIODO", OtherKey="IDPERIODO", IsForeignKey=true)]
		public PERIODO PERIODO
		{
			get
			{
				return this._PERIODO.Entity;
			}
			set
			{
				PERIODO previousValue = this._PERIODO.Entity;
				if (((previousValue != value) 
							|| (this._PERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERIODO.Entity = null;
						previousValue.ORIENTADORACARGODEPROCESOENPERIODO.Remove(this);
					}
					this._PERIODO.Entity = value;
					if ((value != null))
					{
						value.ORIENTADORACARGODEPROCESOENPERIODO.Add(this);
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("PERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_PROCESO", ThisKey="IDPROCESO", OtherKey="IDPROCESO", IsForeignKey=true)]
		public PROCESO PROCESO
		{
			get
			{
				return this._PROCESO.Entity;
			}
			set
			{
				PROCESO previousValue = this._PROCESO.Entity;
				if (((previousValue != value) 
							|| (this._PROCESO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROCESO.Entity = null;
						previousValue.ORIENTADORACARGODEPROCESOENPERIODO.Remove(this);
					}
					this._PROCESO.Entity = value;
					if ((value != null))
					{
						value.ORIENTADORACARGODEPROCESOENPERIODO.Add(this);
						this._IDPROCESO = value.IDPROCESO;
					}
					else
					{
						this._IDPROCESO = default(int);
					}
					this.SendPropertyChanged("PROCESO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = this;
		}
		
		private void detach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = null;
		}
		
		private void attach_MATRICULA(MATRICULA entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = this;
		}
		
		private void detach_MATRICULA(MATRICULA entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = null;
		}
		
		private void attach_REUNION(REUNION entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = this;
		}
		
		private void detach_REUNION(REUNION entity)
		{
			this.SendPropertyChanging();
			entity.ORIENTADORACARGODEPROCESOENPERIODO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PARENTEZCO")]
	public partial class PARENTEZCO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPARENTEZCO;
		
		private string _NOMBREPARENTEZCO;
		
		private EntitySet<PERIODO_PERSONA_FAMILIA> _PERIODO_PERSONA_FAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPARENTEZCOChanging(int value);
    partial void OnIDPARENTEZCOChanged();
    partial void OnNOMBREPARENTEZCOChanging(string value);
    partial void OnNOMBREPARENTEZCOChanged();
    #endregion
		
		public PARENTEZCO()
		{
			this._PERIODO_PERSONA_FAMILIA = new EntitySet<PERIODO_PERSONA_FAMILIA>(new Action<PERIODO_PERSONA_FAMILIA>(this.attach_PERIODO_PERSONA_FAMILIA), new Action<PERIODO_PERSONA_FAMILIA>(this.detach_PERIODO_PERSONA_FAMILIA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPARENTEZCO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPARENTEZCO
		{
			get
			{
				return this._IDPARENTEZCO;
			}
			set
			{
				if ((this._IDPARENTEZCO != value))
				{
					this.OnIDPARENTEZCOChanging(value);
					this.SendPropertyChanging();
					this._IDPARENTEZCO = value;
					this.SendPropertyChanged("IDPARENTEZCO");
					this.OnIDPARENTEZCOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREPARENTEZCO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBREPARENTEZCO
		{
			get
			{
				return this._NOMBREPARENTEZCO;
			}
			set
			{
				if ((this._NOMBREPARENTEZCO != value))
				{
					this.OnNOMBREPARENTEZCOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREPARENTEZCO = value;
					this.SendPropertyChanged("NOMBREPARENTEZCO");
					this.OnNOMBREPARENTEZCOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARENTEZCO_PERIODO_PERSONA_FAMILIA", Storage="_PERIODO_PERSONA_FAMILIA", ThisKey="IDPARENTEZCO", OtherKey="IDPARENTEZCO")]
		public EntitySet<PERIODO_PERSONA_FAMILIA> PERIODO_PERSONA_FAMILIA
		{
			get
			{
				return this._PERIODO_PERSONA_FAMILIA;
			}
			set
			{
				this._PERIODO_PERSONA_FAMILIA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PARENTEZCO = this;
		}
		
		private void detach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PARENTEZCO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERIODO")]
	public partial class PERIODO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERIODO;
		
		private System.Nullable<int> _IDTIPOPERIODO;
		
		private string _NOMBREPERIODO;
		
		private System.DateTime _FECHAINICIOPERIODO;
		
		private System.Nullable<System.DateTime> _FECHAFINPERIODO;
		
		private bool _ESTADOPERIODO;
		
		private EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntitySet<PERIODO_PERSONA_FAMILIA> _PERIODO_PERSONA_FAMILIA;
		
		private EntitySet<SOLUCIONCUESTIONARIO> _SOLUCIONCUESTIONARIO;
		
		private EntityRef<TIPOPERIODO> _TIPOPERIODO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnIDTIPOPERIODOChanging(System.Nullable<int> value);
    partial void OnIDTIPOPERIODOChanged();
    partial void OnNOMBREPERIODOChanging(string value);
    partial void OnNOMBREPERIODOChanged();
    partial void OnFECHAINICIOPERIODOChanging(System.DateTime value);
    partial void OnFECHAINICIOPERIODOChanged();
    partial void OnFECHAFINPERIODOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAFINPERIODOChanged();
    partial void OnESTADOPERIODOChanging(bool value);
    partial void OnESTADOPERIODOChanged();
    #endregion
		
		public PERIODO()
		{
			this._ORIENTADORACARGODEPROCESOENPERIODO = new EntitySet<ORIENTADORACARGODEPROCESOENPERIODO>(new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.attach_ORIENTADORACARGODEPROCESOENPERIODO), new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.detach_ORIENTADORACARGODEPROCESOENPERIODO));
			this._PERIODO_PERSONA_FAMILIA = new EntitySet<PERIODO_PERSONA_FAMILIA>(new Action<PERIODO_PERSONA_FAMILIA>(this.attach_PERIODO_PERSONA_FAMILIA), new Action<PERIODO_PERSONA_FAMILIA>(this.detach_PERIODO_PERSONA_FAMILIA));
			this._SOLUCIONCUESTIONARIO = new EntitySet<SOLUCIONCUESTIONARIO>(new Action<SOLUCIONCUESTIONARIO>(this.attach_SOLUCIONCUESTIONARIO), new Action<SOLUCIONCUESTIONARIO>(this.detach_SOLUCIONCUESTIONARIO));
			this._TIPOPERIODO = default(EntityRef<TIPOPERIODO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPERIODO", DbType="Int")]
		public System.Nullable<int> IDTIPOPERIODO
		{
			get
			{
				return this._IDTIPOPERIODO;
			}
			set
			{
				if ((this._IDTIPOPERIODO != value))
				{
					if (this._TIPOPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPERIODO = value;
					this.SendPropertyChanged("IDTIPOPERIODO");
					this.OnIDTIPOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREPERIODO", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NOMBREPERIODO
		{
			get
			{
				return this._NOMBREPERIODO;
			}
			set
			{
				if ((this._NOMBREPERIODO != value))
				{
					this.OnNOMBREPERIODOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREPERIODO = value;
					this.SendPropertyChanged("NOMBREPERIODO");
					this.OnNOMBREPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAINICIOPERIODO", DbType="Date NOT NULL")]
		public System.DateTime FECHAINICIOPERIODO
		{
			get
			{
				return this._FECHAINICIOPERIODO;
			}
			set
			{
				if ((this._FECHAINICIOPERIODO != value))
				{
					this.OnFECHAINICIOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._FECHAINICIOPERIODO = value;
					this.SendPropertyChanged("FECHAINICIOPERIODO");
					this.OnFECHAINICIOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAFINPERIODO", DbType="Date")]
		public System.Nullable<System.DateTime> FECHAFINPERIODO
		{
			get
			{
				return this._FECHAFINPERIODO;
			}
			set
			{
				if ((this._FECHAFINPERIODO != value))
				{
					this.OnFECHAFINPERIODOChanging(value);
					this.SendPropertyChanging();
					this._FECHAFINPERIODO = value;
					this.SendPropertyChanged("FECHAFINPERIODO");
					this.OnFECHAFINPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOPERIODO", DbType="Bit NOT NULL")]
		public bool ESTADOPERIODO
		{
			get
			{
				return this._ESTADOPERIODO;
			}
			set
			{
				if ((this._ESTADOPERIODO != value))
				{
					this.OnESTADOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._ESTADOPERIODO = value;
					this.SendPropertyChanged("ESTADOPERIODO");
					this.OnESTADOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDPERIODO", OtherKey="IDPERIODO")]
		public EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO;
			}
			set
			{
				this._ORIENTADORACARGODEPROCESOENPERIODO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_PERIODO_PERSONA_FAMILIA", Storage="_PERIODO_PERSONA_FAMILIA", ThisKey="IDPERIODO", OtherKey="IDPERIODO")]
		public EntitySet<PERIODO_PERSONA_FAMILIA> PERIODO_PERSONA_FAMILIA
		{
			get
			{
				return this._PERIODO_PERSONA_FAMILIA;
			}
			set
			{
				this._PERIODO_PERSONA_FAMILIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_SOLUCIONCUESTIONARIO", Storage="_SOLUCIONCUESTIONARIO", ThisKey="IDPERIODO", OtherKey="IDPERIODO")]
		public EntitySet<SOLUCIONCUESTIONARIO> SOLUCIONCUESTIONARIO
		{
			get
			{
				return this._SOLUCIONCUESTIONARIO;
			}
			set
			{
				this._SOLUCIONCUESTIONARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPERIODO_PERIODO", Storage="_TIPOPERIODO", ThisKey="IDTIPOPERIODO", OtherKey="IDTIPOPERIODO", IsForeignKey=true)]
		public TIPOPERIODO TIPOPERIODO
		{
			get
			{
				return this._TIPOPERIODO.Entity;
			}
			set
			{
				TIPOPERIODO previousValue = this._TIPOPERIODO.Entity;
				if (((previousValue != value) 
							|| (this._TIPOPERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOPERIODO.Entity = null;
						previousValue.PERIODO.Remove(this);
					}
					this._TIPOPERIODO.Entity = value;
					if ((value != null))
					{
						value.PERIODO.Add(this);
						this._IDTIPOPERIODO = value.IDTIPOPERIODO;
					}
					else
					{
						this._IDTIPOPERIODO = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOPERIODO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = this;
		}
		
		private void detach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = null;
		}
		
		private void attach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = this;
		}
		
		private void detach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = null;
		}
		
		private void attach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = this;
		}
		
		private void detach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PERIODO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERIODO_PERSONA_FAMILIA")]
	public partial class PERIODO_PERSONA_FAMILIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFAMILIA;
		
		private int _IDPERSONA;
		
		private int _IDPERIODO;
		
		private bool _REPRESENTANTE;
		
		private System.Nullable<int> _IDPARENTEZCO;
		
		private System.Nullable<int> _IDREPRESENTANTE;
		
		private EntityRef<FAMILIA> _FAMILIA;
		
		private EntityRef<PERIODO> _PERIODO;
		
		private EntityRef<PARENTEZCO> _PARENTEZCO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFAMILIAChanging(int value);
    partial void OnIDFAMILIAChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnREPRESENTANTEChanging(bool value);
    partial void OnREPRESENTANTEChanged();
    partial void OnIDPARENTEZCOChanging(System.Nullable<int> value);
    partial void OnIDPARENTEZCOChanged();
    partial void OnIDREPRESENTANTEChanging(System.Nullable<int> value);
    partial void OnIDREPRESENTANTEChanged();
    #endregion
		
		public PERIODO_PERSONA_FAMILIA()
		{
			this._FAMILIA = default(EntityRef<FAMILIA>);
			this._PERIODO = default(EntityRef<PERIODO>);
			this._PARENTEZCO = default(EntityRef<PARENTEZCO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFAMILIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFAMILIA
		{
			get
			{
				return this._IDFAMILIA;
			}
			set
			{
				if ((this._IDFAMILIA != value))
				{
					if (this._FAMILIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDFAMILIA = value;
					this.SendPropertyChanged("IDFAMILIA");
					this.OnIDFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._PERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPRESENTANTE", DbType="Bit NOT NULL")]
		public bool REPRESENTANTE
		{
			get
			{
				return this._REPRESENTANTE;
			}
			set
			{
				if ((this._REPRESENTANTE != value))
				{
					this.OnREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._REPRESENTANTE = value;
					this.SendPropertyChanged("REPRESENTANTE");
					this.OnREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPARENTEZCO", DbType="Int")]
		public System.Nullable<int> IDPARENTEZCO
		{
			get
			{
				return this._IDPARENTEZCO;
			}
			set
			{
				if ((this._IDPARENTEZCO != value))
				{
					if (this._PARENTEZCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPARENTEZCOChanging(value);
					this.SendPropertyChanging();
					this._IDPARENTEZCO = value;
					this.SendPropertyChanged("IDPARENTEZCO");
					this.OnIDPARENTEZCOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREPRESENTANTE", DbType="Int")]
		public System.Nullable<int> IDREPRESENTANTE
		{
			get
			{
				return this._IDREPRESENTANTE;
			}
			set
			{
				if ((this._IDREPRESENTANTE != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._IDREPRESENTANTE = value;
					this.SendPropertyChanged("IDREPRESENTANTE");
					this.OnIDREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_PERIODO_PERSONA_FAMILIA", Storage="_FAMILIA", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA", IsForeignKey=true)]
		public FAMILIA FAMILIA
		{
			get
			{
				return this._FAMILIA.Entity;
			}
			set
			{
				FAMILIA previousValue = this._FAMILIA.Entity;
				if (((previousValue != value) 
							|| (this._FAMILIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FAMILIA.Entity = null;
						previousValue.PERIODO_PERSONA_FAMILIA.Remove(this);
					}
					this._FAMILIA.Entity = value;
					if ((value != null))
					{
						value.PERIODO_PERSONA_FAMILIA.Add(this);
						this._IDFAMILIA = value.IDFAMILIA;
					}
					else
					{
						this._IDFAMILIA = default(int);
					}
					this.SendPropertyChanged("FAMILIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_PERIODO_PERSONA_FAMILIA", Storage="_PERIODO", ThisKey="IDPERIODO", OtherKey="IDPERIODO", IsForeignKey=true)]
		public PERIODO PERIODO
		{
			get
			{
				return this._PERIODO.Entity;
			}
			set
			{
				PERIODO previousValue = this._PERIODO.Entity;
				if (((previousValue != value) 
							|| (this._PERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERIODO.Entity = null;
						previousValue.PERIODO_PERSONA_FAMILIA.Remove(this);
					}
					this._PERIODO.Entity = value;
					if ((value != null))
					{
						value.PERIODO_PERSONA_FAMILIA.Add(this);
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("PERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PARENTEZCO_PERIODO_PERSONA_FAMILIA", Storage="_PARENTEZCO", ThisKey="IDPARENTEZCO", OtherKey="IDPARENTEZCO", IsForeignKey=true)]
		public PARENTEZCO PARENTEZCO
		{
			get
			{
				return this._PARENTEZCO.Entity;
			}
			set
			{
				PARENTEZCO previousValue = this._PARENTEZCO.Entity;
				if (((previousValue != value) 
							|| (this._PARENTEZCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PARENTEZCO.Entity = null;
						previousValue.PERIODO_PERSONA_FAMILIA.Remove(this);
					}
					this._PARENTEZCO.Entity = value;
					if ((value != null))
					{
						value.PERIODO_PERSONA_FAMILIA.Add(this);
						this._IDPARENTEZCO = value.IDPARENTEZCO;
					}
					else
					{
						this._IDPARENTEZCO = default(Nullable<int>);
					}
					this.SendPropertyChanged("PARENTEZCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_PERIODO_PERSONA_FAMILIA", Storage="_PERSONA", ThisKey="IDREPRESENTANTE", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.PERIODO_PERSONA_FAMILIA.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.PERIODO_PERSONA_FAMILIA.Add(this);
						this._IDREPRESENTANTE = value.IDPERSONA;
					}
					else
					{
						this._IDREPRESENTANTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA")]
	public partial class PERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERSONA;
		
		private System.Nullable<int> _IDALIMENTACION2;
		
		private System.Nullable<int> _IDASISTENCIA;
		
		private string _PRIMERNOMBREPERSONA;
		
		private string _SEGUNDONOMBREPERSONA;
		
		private string _PRIMERAPELLIDOPERSONA;
		
		private string _SEGUNDOAPELLIDOPERSONA;
		
		private bool _GENEROPERSONA;
		
		private System.Nullable<System.DateTime> _FECHANACIMIENTOPERSONA;
		
		private string _CEDULAPERSONA;
		
		private string _LUGARNACIMIENTOPERSONA;
		
		private bool _VIVECONFAMILIAPERSONA;
		
		private string _OBSERVACIONPERSONA;
		
		private System.Nullable<System.DateTime> _FECHAINGRESOPROGRAMA;
		
		private System.Nullable<bool> _CABEZAFAMILIA;
		
		private EntitySet<ADULTO> _ADULTO;
		
		private EntitySet<ASISTENCIA> _ASISTENCIA;
		
		private EntitySet<ASISTENCIAREUNION> _ASISTENCIAREUNION;
		
		private EntitySet<MATRICULA> _MATRICULA;
		
		private EntitySet<MENOREDAD> _MENOREDAD;
		
		private EntitySet<PERIODO_PERSONA_FAMILIA> _PERIODO_PERSONA_FAMILIA;
		
		private EntitySet<REPRESENTANTE> _REPRESENTANTE;
		
		private EntitySet<SOLUCIONCUESTIONARIO> _SOLUCIONCUESTIONARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDALIMENTACION2Changing(System.Nullable<int> value);
    partial void OnIDALIMENTACION2Changed();
    partial void OnIDASISTENCIAChanging(System.Nullable<int> value);
    partial void OnIDASISTENCIAChanged();
    partial void OnPRIMERNOMBREPERSONAChanging(string value);
    partial void OnPRIMERNOMBREPERSONAChanged();
    partial void OnSEGUNDONOMBREPERSONAChanging(string value);
    partial void OnSEGUNDONOMBREPERSONAChanged();
    partial void OnPRIMERAPELLIDOPERSONAChanging(string value);
    partial void OnPRIMERAPELLIDOPERSONAChanged();
    partial void OnSEGUNDOAPELLIDOPERSONAChanging(string value);
    partial void OnSEGUNDOAPELLIDOPERSONAChanged();
    partial void OnGENEROPERSONAChanging(bool value);
    partial void OnGENEROPERSONAChanged();
    partial void OnFECHANACIMIENTOPERSONAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHANACIMIENTOPERSONAChanged();
    partial void OnCEDULAPERSONAChanging(string value);
    partial void OnCEDULAPERSONAChanged();
    partial void OnLUGARNACIMIENTOPERSONAChanging(string value);
    partial void OnLUGARNACIMIENTOPERSONAChanged();
    partial void OnVIVECONFAMILIAPERSONAChanging(bool value);
    partial void OnVIVECONFAMILIAPERSONAChanged();
    partial void OnOBSERVACIONPERSONAChanging(string value);
    partial void OnOBSERVACIONPERSONAChanged();
    partial void OnFECHAINGRESOPROGRAMAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAINGRESOPROGRAMAChanged();
    partial void OnCABEZAFAMILIAChanging(System.Nullable<bool> value);
    partial void OnCABEZAFAMILIAChanged();
    #endregion
		
		public PERSONA()
		{
			this._ADULTO = new EntitySet<ADULTO>(new Action<ADULTO>(this.attach_ADULTO), new Action<ADULTO>(this.detach_ADULTO));
			this._ASISTENCIA = new EntitySet<ASISTENCIA>(new Action<ASISTENCIA>(this.attach_ASISTENCIA), new Action<ASISTENCIA>(this.detach_ASISTENCIA));
			this._ASISTENCIAREUNION = new EntitySet<ASISTENCIAREUNION>(new Action<ASISTENCIAREUNION>(this.attach_ASISTENCIAREUNION), new Action<ASISTENCIAREUNION>(this.detach_ASISTENCIAREUNION));
			this._MATRICULA = new EntitySet<MATRICULA>(new Action<MATRICULA>(this.attach_MATRICULA), new Action<MATRICULA>(this.detach_MATRICULA));
			this._MENOREDAD = new EntitySet<MENOREDAD>(new Action<MENOREDAD>(this.attach_MENOREDAD), new Action<MENOREDAD>(this.detach_MENOREDAD));
			this._PERIODO_PERSONA_FAMILIA = new EntitySet<PERIODO_PERSONA_FAMILIA>(new Action<PERIODO_PERSONA_FAMILIA>(this.attach_PERIODO_PERSONA_FAMILIA), new Action<PERIODO_PERSONA_FAMILIA>(this.detach_PERIODO_PERSONA_FAMILIA));
			this._REPRESENTANTE = new EntitySet<REPRESENTANTE>(new Action<REPRESENTANTE>(this.attach_REPRESENTANTE), new Action<REPRESENTANTE>(this.detach_REPRESENTANTE));
			this._SOLUCIONCUESTIONARIO = new EntitySet<SOLUCIONCUESTIONARIO>(new Action<SOLUCIONCUESTIONARIO>(this.attach_SOLUCIONCUESTIONARIO), new Action<SOLUCIONCUESTIONARIO>(this.detach_SOLUCIONCUESTIONARIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDALIMENTACION2", DbType="Int")]
		public System.Nullable<int> IDALIMENTACION2
		{
			get
			{
				return this._IDALIMENTACION2;
			}
			set
			{
				if ((this._IDALIMENTACION2 != value))
				{
					this.OnIDALIMENTACION2Changing(value);
					this.SendPropertyChanging();
					this._IDALIMENTACION2 = value;
					this.SendPropertyChanged("IDALIMENTACION2");
					this.OnIDALIMENTACION2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDASISTENCIA", DbType="Int")]
		public System.Nullable<int> IDASISTENCIA
		{
			get
			{
				return this._IDASISTENCIA;
			}
			set
			{
				if ((this._IDASISTENCIA != value))
				{
					this.OnIDASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDASISTENCIA = value;
					this.SendPropertyChanged("IDASISTENCIA");
					this.OnIDASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERNOMBREPERSONA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRIMERNOMBREPERSONA
		{
			get
			{
				return this._PRIMERNOMBREPERSONA;
			}
			set
			{
				if ((this._PRIMERNOMBREPERSONA != value))
				{
					this.OnPRIMERNOMBREPERSONAChanging(value);
					this.SendPropertyChanging();
					this._PRIMERNOMBREPERSONA = value;
					this.SendPropertyChanged("PRIMERNOMBREPERSONA");
					this.OnPRIMERNOMBREPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDONOMBREPERSONA", DbType="VarChar(50)")]
		public string SEGUNDONOMBREPERSONA
		{
			get
			{
				return this._SEGUNDONOMBREPERSONA;
			}
			set
			{
				if ((this._SEGUNDONOMBREPERSONA != value))
				{
					this.OnSEGUNDONOMBREPERSONAChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDONOMBREPERSONA = value;
					this.SendPropertyChanged("SEGUNDONOMBREPERSONA");
					this.OnSEGUNDONOMBREPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMERAPELLIDOPERSONA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRIMERAPELLIDOPERSONA
		{
			get
			{
				return this._PRIMERAPELLIDOPERSONA;
			}
			set
			{
				if ((this._PRIMERAPELLIDOPERSONA != value))
				{
					this.OnPRIMERAPELLIDOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._PRIMERAPELLIDOPERSONA = value;
					this.SendPropertyChanged("PRIMERAPELLIDOPERSONA");
					this.OnPRIMERAPELLIDOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEGUNDOAPELLIDOPERSONA", DbType="VarChar(50)")]
		public string SEGUNDOAPELLIDOPERSONA
		{
			get
			{
				return this._SEGUNDOAPELLIDOPERSONA;
			}
			set
			{
				if ((this._SEGUNDOAPELLIDOPERSONA != value))
				{
					this.OnSEGUNDOAPELLIDOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._SEGUNDOAPELLIDOPERSONA = value;
					this.SendPropertyChanged("SEGUNDOAPELLIDOPERSONA");
					this.OnSEGUNDOAPELLIDOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENEROPERSONA", DbType="Bit NOT NULL")]
		public bool GENEROPERSONA
		{
			get
			{
				return this._GENEROPERSONA;
			}
			set
			{
				if ((this._GENEROPERSONA != value))
				{
					this.OnGENEROPERSONAChanging(value);
					this.SendPropertyChanging();
					this._GENEROPERSONA = value;
					this.SendPropertyChanged("GENEROPERSONA");
					this.OnGENEROPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHANACIMIENTOPERSONA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHANACIMIENTOPERSONA
		{
			get
			{
				return this._FECHANACIMIENTOPERSONA;
			}
			set
			{
				if ((this._FECHANACIMIENTOPERSONA != value))
				{
					this.OnFECHANACIMIENTOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._FECHANACIMIENTOPERSONA = value;
					this.SendPropertyChanged("FECHANACIMIENTOPERSONA");
					this.OnFECHANACIMIENTOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULAPERSONA", DbType="VarChar(10)")]
		public string CEDULAPERSONA
		{
			get
			{
				return this._CEDULAPERSONA;
			}
			set
			{
				if ((this._CEDULAPERSONA != value))
				{
					this.OnCEDULAPERSONAChanging(value);
					this.SendPropertyChanging();
					this._CEDULAPERSONA = value;
					this.SendPropertyChanged("CEDULAPERSONA");
					this.OnCEDULAPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUGARNACIMIENTOPERSONA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LUGARNACIMIENTOPERSONA
		{
			get
			{
				return this._LUGARNACIMIENTOPERSONA;
			}
			set
			{
				if ((this._LUGARNACIMIENTOPERSONA != value))
				{
					this.OnLUGARNACIMIENTOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._LUGARNACIMIENTOPERSONA = value;
					this.SendPropertyChanged("LUGARNACIMIENTOPERSONA");
					this.OnLUGARNACIMIENTOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIVECONFAMILIAPERSONA", DbType="Bit NOT NULL")]
		public bool VIVECONFAMILIAPERSONA
		{
			get
			{
				return this._VIVECONFAMILIAPERSONA;
			}
			set
			{
				if ((this._VIVECONFAMILIAPERSONA != value))
				{
					this.OnVIVECONFAMILIAPERSONAChanging(value);
					this.SendPropertyChanging();
					this._VIVECONFAMILIAPERSONA = value;
					this.SendPropertyChanged("VIVECONFAMILIAPERSONA");
					this.OnVIVECONFAMILIAPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONPERSONA", DbType="VarChar(1024)")]
		public string OBSERVACIONPERSONA
		{
			get
			{
				return this._OBSERVACIONPERSONA;
			}
			set
			{
				if ((this._OBSERVACIONPERSONA != value))
				{
					this.OnOBSERVACIONPERSONAChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONPERSONA = value;
					this.SendPropertyChanged("OBSERVACIONPERSONA");
					this.OnOBSERVACIONPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAINGRESOPROGRAMA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHAINGRESOPROGRAMA
		{
			get
			{
				return this._FECHAINGRESOPROGRAMA;
			}
			set
			{
				if ((this._FECHAINGRESOPROGRAMA != value))
				{
					this.OnFECHAINGRESOPROGRAMAChanging(value);
					this.SendPropertyChanging();
					this._FECHAINGRESOPROGRAMA = value;
					this.SendPropertyChanged("FECHAINGRESOPROGRAMA");
					this.OnFECHAINGRESOPROGRAMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CABEZAFAMILIA", DbType="Bit")]
		public System.Nullable<bool> CABEZAFAMILIA
		{
			get
			{
				return this._CABEZAFAMILIA;
			}
			set
			{
				if ((this._CABEZAFAMILIA != value))
				{
					this.OnCABEZAFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._CABEZAFAMILIA = value;
					this.SendPropertyChanged("CABEZAFAMILIA");
					this.OnCABEZAFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ADULTO", Storage="_ADULTO", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<ADULTO> ADULTO
		{
			get
			{
				return this._ADULTO;
			}
			set
			{
				this._ADULTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ASISTENCIA", Storage="_ASISTENCIA", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<ASISTENCIA> ASISTENCIA
		{
			get
			{
				return this._ASISTENCIA;
			}
			set
			{
				this._ASISTENCIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ASISTENCIAREUNION", Storage="_ASISTENCIAREUNION", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<ASISTENCIAREUNION> ASISTENCIAREUNION
		{
			get
			{
				return this._ASISTENCIAREUNION;
			}
			set
			{
				this._ASISTENCIAREUNION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_MATRICULA", Storage="_MATRICULA", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<MATRICULA> MATRICULA
		{
			get
			{
				return this._MATRICULA;
			}
			set
			{
				this._MATRICULA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_MENOREDAD", Storage="_MENOREDAD", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<MENOREDAD> MENOREDAD
		{
			get
			{
				return this._MENOREDAD;
			}
			set
			{
				this._MENOREDAD.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_PERIODO_PERSONA_FAMILIA", Storage="_PERIODO_PERSONA_FAMILIA", ThisKey="IDPERSONA", OtherKey="IDREPRESENTANTE")]
		public EntitySet<PERIODO_PERSONA_FAMILIA> PERIODO_PERSONA_FAMILIA
		{
			get
			{
				return this._PERIODO_PERSONA_FAMILIA;
			}
			set
			{
				this._PERIODO_PERSONA_FAMILIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_REPRESENTANTE", Storage="_REPRESENTANTE", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<REPRESENTANTE> REPRESENTANTE
		{
			get
			{
				return this._REPRESENTANTE;
			}
			set
			{
				this._REPRESENTANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_SOLUCIONCUESTIONARIO", Storage="_SOLUCIONCUESTIONARIO", ThisKey="IDPERSONA", OtherKey="IDPERSONA")]
		public EntitySet<SOLUCIONCUESTIONARIO> SOLUCIONCUESTIONARIO
		{
			get
			{
				return this._SOLUCIONCUESTIONARIO;
			}
			set
			{
				this._SOLUCIONCUESTIONARIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADULTO(ADULTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ADULTO(ADULTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_MATRICULA(MATRICULA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_MATRICULA(MATRICULA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_MENOREDAD(MENOREDAD entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_MENOREDAD(MENOREDAD entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_PERIODO_PERSONA_FAMILIA(PERIODO_PERSONA_FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_REPRESENTANTE(REPRESENTANTE entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_REPRESENTANTE(REPRESENTANTE entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_SOLUCIONCUESTIONARIO(SOLUCIONCUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA_FAMILIA")]
	public partial class PERSONA_FAMILIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFAMILIA;
		
		private int _IDPERSONA;
		
		private System.Nullable<System.DateTime> _FECHATIPOPREGUNTA;
		
		private System.Nullable<bool> _REFERENCIAFAMILIA;
		
		private EntityRef<FAMILIA> _FAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFAMILIAChanging(int value);
    partial void OnIDFAMILIAChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnFECHATIPOPREGUNTAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHATIPOPREGUNTAChanged();
    partial void OnREFERENCIAFAMILIAChanging(System.Nullable<bool> value);
    partial void OnREFERENCIAFAMILIAChanged();
    #endregion
		
		public PERSONA_FAMILIA()
		{
			this._FAMILIA = default(EntityRef<FAMILIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFAMILIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFAMILIA
		{
			get
			{
				return this._IDFAMILIA;
			}
			set
			{
				if ((this._IDFAMILIA != value))
				{
					if (this._FAMILIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDFAMILIA = value;
					this.SendPropertyChanged("IDFAMILIA");
					this.OnIDFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHATIPOPREGUNTA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHATIPOPREGUNTA
		{
			get
			{
				return this._FECHATIPOPREGUNTA;
			}
			set
			{
				if ((this._FECHATIPOPREGUNTA != value))
				{
					this.OnFECHATIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._FECHATIPOPREGUNTA = value;
					this.SendPropertyChanged("FECHATIPOPREGUNTA");
					this.OnFECHATIPOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REFERENCIAFAMILIA", DbType="Bit")]
		public System.Nullable<bool> REFERENCIAFAMILIA
		{
			get
			{
				return this._REFERENCIAFAMILIA;
			}
			set
			{
				if ((this._REFERENCIAFAMILIA != value))
				{
					this.OnREFERENCIAFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._REFERENCIAFAMILIA = value;
					this.SendPropertyChanged("REFERENCIAFAMILIA");
					this.OnREFERENCIAFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_PERSONA_FAMILIA", Storage="_FAMILIA", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA", IsForeignKey=true)]
		public FAMILIA FAMILIA
		{
			get
			{
				return this._FAMILIA.Entity;
			}
			set
			{
				FAMILIA previousValue = this._FAMILIA.Entity;
				if (((previousValue != value) 
							|| (this._FAMILIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FAMILIA.Entity = null;
						previousValue.PERSONA_FAMILIA.Remove(this);
					}
					this._FAMILIA.Entity = value;
					if ((value != null))
					{
						value.PERSONA_FAMILIA.Add(this);
						this._IDFAMILIA = value.IDFAMILIA;
					}
					else
					{
						this._IDFAMILIA = default(int);
					}
					this.SendPropertyChanged("FAMILIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSIBLERESPUESTA")]
	public partial class POSIBLERESPUESTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPOSIBLERESPUESTA;
		
		private string _TEXTOPOSIBLERESPUESTA;
		
		private System.Nullable<int> _PUNTAJEPOSIBLERESPUESTA;
		
		private bool _ESTADOPOSIBLERESPUESTA;
		
		private EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS> _PREGUNTASCONPOSIBLESRESPUESTAS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPOSIBLERESPUESTAChanging(int value);
    partial void OnIDPOSIBLERESPUESTAChanged();
    partial void OnTEXTOPOSIBLERESPUESTAChanging(string value);
    partial void OnTEXTOPOSIBLERESPUESTAChanged();
    partial void OnPUNTAJEPOSIBLERESPUESTAChanging(System.Nullable<int> value);
    partial void OnPUNTAJEPOSIBLERESPUESTAChanged();
    partial void OnESTADOPOSIBLERESPUESTAChanging(bool value);
    partial void OnESTADOPOSIBLERESPUESTAChanged();
    #endregion
		
		public POSIBLERESPUESTA()
		{
			this._PREGUNTASCONPOSIBLESRESPUESTAS = new EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS>(new Action<PREGUNTASCONPOSIBLESRESPUESTAS>(this.attach_PREGUNTASCONPOSIBLESRESPUESTAS), new Action<PREGUNTASCONPOSIBLESRESPUESTAS>(this.detach_PREGUNTASCONPOSIBLESRESPUESTAS));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPOSIBLERESPUESTA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPOSIBLERESPUESTA
		{
			get
			{
				return this._IDPOSIBLERESPUESTA;
			}
			set
			{
				if ((this._IDPOSIBLERESPUESTA != value))
				{
					this.OnIDPOSIBLERESPUESTAChanging(value);
					this.SendPropertyChanging();
					this._IDPOSIBLERESPUESTA = value;
					this.SendPropertyChanged("IDPOSIBLERESPUESTA");
					this.OnIDPOSIBLERESPUESTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEXTOPOSIBLERESPUESTA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEXTOPOSIBLERESPUESTA
		{
			get
			{
				return this._TEXTOPOSIBLERESPUESTA;
			}
			set
			{
				if ((this._TEXTOPOSIBLERESPUESTA != value))
				{
					this.OnTEXTOPOSIBLERESPUESTAChanging(value);
					this.SendPropertyChanging();
					this._TEXTOPOSIBLERESPUESTA = value;
					this.SendPropertyChanged("TEXTOPOSIBLERESPUESTA");
					this.OnTEXTOPOSIBLERESPUESTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUNTAJEPOSIBLERESPUESTA", DbType="Int")]
		public System.Nullable<int> PUNTAJEPOSIBLERESPUESTA
		{
			get
			{
				return this._PUNTAJEPOSIBLERESPUESTA;
			}
			set
			{
				if ((this._PUNTAJEPOSIBLERESPUESTA != value))
				{
					this.OnPUNTAJEPOSIBLERESPUESTAChanging(value);
					this.SendPropertyChanging();
					this._PUNTAJEPOSIBLERESPUESTA = value;
					this.SendPropertyChanged("PUNTAJEPOSIBLERESPUESTA");
					this.OnPUNTAJEPOSIBLERESPUESTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOPOSIBLERESPUESTA", DbType="Bit NOT NULL")]
		public bool ESTADOPOSIBLERESPUESTA
		{
			get
			{
				return this._ESTADOPOSIBLERESPUESTA;
			}
			set
			{
				if ((this._ESTADOPOSIBLERESPUESTA != value))
				{
					this.OnESTADOPOSIBLERESPUESTAChanging(value);
					this.SendPropertyChanging();
					this._ESTADOPOSIBLERESPUESTA = value;
					this.SendPropertyChanged("ESTADOPOSIBLERESPUESTA");
					this.OnESTADOPOSIBLERESPUESTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSIBLERESPUESTA_PREGUNTASCONPOSIBLESRESPUESTAS", Storage="_PREGUNTASCONPOSIBLESRESPUESTAS", ThisKey="IDPOSIBLERESPUESTA", OtherKey="IDPOSIBLERESPUESTA")]
		public EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS> PREGUNTASCONPOSIBLESRESPUESTAS
		{
			get
			{
				return this._PREGUNTASCONPOSIBLESRESPUESTAS;
			}
			set
			{
				this._PREGUNTASCONPOSIBLESRESPUESTAS.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS entity)
		{
			this.SendPropertyChanging();
			entity.POSIBLERESPUESTA = this;
		}
		
		private void detach_PREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS entity)
		{
			this.SendPropertyChanging();
			entity.POSIBLERESPUESTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PREGUNTA")]
	public partial class PREGUNTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPREGUNTA;
		
		private System.Nullable<int> _IDTIPOPREGUNTA;
		
		private string _NOMBREPREGUNTA;
		
		private bool _ESTADOPREGUNTA;
		
		private EntitySet<CUESTIONARIO> _CUESTIONARIO;
		
		private EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS> _PREGUNTASCONPOSIBLESRESPUESTAS;
		
		private EntityRef<TIPOPREGUNTA> _TIPOPREGUNTA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPREGUNTAChanging(int value);
    partial void OnIDPREGUNTAChanged();
    partial void OnIDTIPOPREGUNTAChanging(System.Nullable<int> value);
    partial void OnIDTIPOPREGUNTAChanged();
    partial void OnNOMBREPREGUNTAChanging(string value);
    partial void OnNOMBREPREGUNTAChanged();
    partial void OnESTADOPREGUNTAChanging(bool value);
    partial void OnESTADOPREGUNTAChanged();
    #endregion
		
		public PREGUNTA()
		{
			this._CUESTIONARIO = new EntitySet<CUESTIONARIO>(new Action<CUESTIONARIO>(this.attach_CUESTIONARIO), new Action<CUESTIONARIO>(this.detach_CUESTIONARIO));
			this._PREGUNTASCONPOSIBLESRESPUESTAS = new EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS>(new Action<PREGUNTASCONPOSIBLESRESPUESTAS>(this.attach_PREGUNTASCONPOSIBLESRESPUESTAS), new Action<PREGUNTASCONPOSIBLESRESPUESTAS>(this.detach_PREGUNTASCONPOSIBLESRESPUESTAS));
			this._TIPOPREGUNTA = default(EntityRef<TIPOPREGUNTA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPREGUNTA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPREGUNTA
		{
			get
			{
				return this._IDPREGUNTA;
			}
			set
			{
				if ((this._IDPREGUNTA != value))
				{
					this.OnIDPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDPREGUNTA = value;
					this.SendPropertyChanged("IDPREGUNTA");
					this.OnIDPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPREGUNTA", DbType="Int")]
		public System.Nullable<int> IDTIPOPREGUNTA
		{
			get
			{
				return this._IDTIPOPREGUNTA;
			}
			set
			{
				if ((this._IDTIPOPREGUNTA != value))
				{
					if (this._TIPOPREGUNTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPREGUNTA = value;
					this.SendPropertyChanged("IDTIPOPREGUNTA");
					this.OnIDTIPOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREPREGUNTA", DbType="VarChar(100)")]
		public string NOMBREPREGUNTA
		{
			get
			{
				return this._NOMBREPREGUNTA;
			}
			set
			{
				if ((this._NOMBREPREGUNTA != value))
				{
					this.OnNOMBREPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._NOMBREPREGUNTA = value;
					this.SendPropertyChanged("NOMBREPREGUNTA");
					this.OnNOMBREPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOPREGUNTA", DbType="Bit NOT NULL")]
		public bool ESTADOPREGUNTA
		{
			get
			{
				return this._ESTADOPREGUNTA;
			}
			set
			{
				if ((this._ESTADOPREGUNTA != value))
				{
					this.OnESTADOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._ESTADOPREGUNTA = value;
					this.SendPropertyChanged("ESTADOPREGUNTA");
					this.OnESTADOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREGUNTA_CUESTIONARIO", Storage="_CUESTIONARIO", ThisKey="IDPREGUNTA", OtherKey="IDPREGUNTA")]
		public EntitySet<CUESTIONARIO> CUESTIONARIO
		{
			get
			{
				return this._CUESTIONARIO;
			}
			set
			{
				this._CUESTIONARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREGUNTA_PREGUNTASCONPOSIBLESRESPUESTAS", Storage="_PREGUNTASCONPOSIBLESRESPUESTAS", ThisKey="IDPREGUNTA", OtherKey="IDPREGUNTA")]
		public EntitySet<PREGUNTASCONPOSIBLESRESPUESTAS> PREGUNTASCONPOSIBLESRESPUESTAS
		{
			get
			{
				return this._PREGUNTASCONPOSIBLESRESPUESTAS;
			}
			set
			{
				this._PREGUNTASCONPOSIBLESRESPUESTAS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPREGUNTA_PREGUNTA", Storage="_TIPOPREGUNTA", ThisKey="IDTIPOPREGUNTA", OtherKey="IDTIPOPREGUNTA", IsForeignKey=true)]
		public TIPOPREGUNTA TIPOPREGUNTA
		{
			get
			{
				return this._TIPOPREGUNTA.Entity;
			}
			set
			{
				TIPOPREGUNTA previousValue = this._TIPOPREGUNTA.Entity;
				if (((previousValue != value) 
							|| (this._TIPOPREGUNTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOPREGUNTA.Entity = null;
						previousValue.PREGUNTA.Remove(this);
					}
					this._TIPOPREGUNTA.Entity = value;
					if ((value != null))
					{
						value.PREGUNTA.Add(this);
						this._IDTIPOPREGUNTA = value.IDTIPOPREGUNTA;
					}
					else
					{
						this._IDTIPOPREGUNTA = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPOPREGUNTA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PREGUNTA = this;
		}
		
		private void detach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PREGUNTA = null;
		}
		
		private void attach_PREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS entity)
		{
			this.SendPropertyChanging();
			entity.PREGUNTA = this;
		}
		
		private void detach_PREGUNTASCONPOSIBLESRESPUESTAS(PREGUNTASCONPOSIBLESRESPUESTAS entity)
		{
			this.SendPropertyChanging();
			entity.PREGUNTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PREGUNTASCONPOSIBLESRESPUESTAS")]
	public partial class PREGUNTASCONPOSIBLESRESPUESTAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPOSIBLERESPUESTA;
		
		private int _IDPREGUNTA;
		
		private EntityRef<POSIBLERESPUESTA> _POSIBLERESPUESTA;
		
		private EntityRef<PREGUNTA> _PREGUNTA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPOSIBLERESPUESTAChanging(int value);
    partial void OnIDPOSIBLERESPUESTAChanged();
    partial void OnIDPREGUNTAChanging(int value);
    partial void OnIDPREGUNTAChanged();
    #endregion
		
		public PREGUNTASCONPOSIBLESRESPUESTAS()
		{
			this._POSIBLERESPUESTA = default(EntityRef<POSIBLERESPUESTA>);
			this._PREGUNTA = default(EntityRef<PREGUNTA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPOSIBLERESPUESTA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPOSIBLERESPUESTA
		{
			get
			{
				return this._IDPOSIBLERESPUESTA;
			}
			set
			{
				if ((this._IDPOSIBLERESPUESTA != value))
				{
					if (this._POSIBLERESPUESTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPOSIBLERESPUESTAChanging(value);
					this.SendPropertyChanging();
					this._IDPOSIBLERESPUESTA = value;
					this.SendPropertyChanged("IDPOSIBLERESPUESTA");
					this.OnIDPOSIBLERESPUESTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPREGUNTA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPREGUNTA
		{
			get
			{
				return this._IDPREGUNTA;
			}
			set
			{
				if ((this._IDPREGUNTA != value))
				{
					if (this._PREGUNTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDPREGUNTA = value;
					this.SendPropertyChanged("IDPREGUNTA");
					this.OnIDPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSIBLERESPUESTA_PREGUNTASCONPOSIBLESRESPUESTAS", Storage="_POSIBLERESPUESTA", ThisKey="IDPOSIBLERESPUESTA", OtherKey="IDPOSIBLERESPUESTA", IsForeignKey=true)]
		public POSIBLERESPUESTA POSIBLERESPUESTA
		{
			get
			{
				return this._POSIBLERESPUESTA.Entity;
			}
			set
			{
				POSIBLERESPUESTA previousValue = this._POSIBLERESPUESTA.Entity;
				if (((previousValue != value) 
							|| (this._POSIBLERESPUESTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSIBLERESPUESTA.Entity = null;
						previousValue.PREGUNTASCONPOSIBLESRESPUESTAS.Remove(this);
					}
					this._POSIBLERESPUESTA.Entity = value;
					if ((value != null))
					{
						value.PREGUNTASCONPOSIBLESRESPUESTAS.Add(this);
						this._IDPOSIBLERESPUESTA = value.IDPOSIBLERESPUESTA;
					}
					else
					{
						this._IDPOSIBLERESPUESTA = default(int);
					}
					this.SendPropertyChanged("POSIBLERESPUESTA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREGUNTA_PREGUNTASCONPOSIBLESRESPUESTAS", Storage="_PREGUNTA", ThisKey="IDPREGUNTA", OtherKey="IDPREGUNTA", IsForeignKey=true)]
		public PREGUNTA PREGUNTA
		{
			get
			{
				return this._PREGUNTA.Entity;
			}
			set
			{
				PREGUNTA previousValue = this._PREGUNTA.Entity;
				if (((previousValue != value) 
							|| (this._PREGUNTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PREGUNTA.Entity = null;
						previousValue.PREGUNTASCONPOSIBLESRESPUESTAS.Remove(this);
					}
					this._PREGUNTA.Entity = value;
					if ((value != null))
					{
						value.PREGUNTASCONPOSIBLESRESPUESTAS.Add(this);
						this._IDPREGUNTA = value.IDPREGUNTA;
					}
					else
					{
						this._IDPREGUNTA = default(int);
					}
					this.SendPropertyChanged("PREGUNTA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROCESO")]
	public partial class PROCESO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPROCESO;
		
		private string _NOMBREPROCESO;
		
		private bool _ESTADOPROCESO;
		
		private EntitySet<CUESTIONARIO> _CUESTIONARIO;
		
		private EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntitySet<PROCESO_ORIENTADOR> _PROCESO_ORIENTADOR;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnNOMBREPROCESOChanging(string value);
    partial void OnNOMBREPROCESOChanged();
    partial void OnESTADOPROCESOChanging(bool value);
    partial void OnESTADOPROCESOChanged();
    #endregion
		
		public PROCESO()
		{
			this._CUESTIONARIO = new EntitySet<CUESTIONARIO>(new Action<CUESTIONARIO>(this.attach_CUESTIONARIO), new Action<CUESTIONARIO>(this.detach_CUESTIONARIO));
			this._ORIENTADORACARGODEPROCESOENPERIODO = new EntitySet<ORIENTADORACARGODEPROCESOENPERIODO>(new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.attach_ORIENTADORACARGODEPROCESOENPERIODO), new Action<ORIENTADORACARGODEPROCESOENPERIODO>(this.detach_ORIENTADORACARGODEPROCESOENPERIODO));
			this._PROCESO_ORIENTADOR = new EntitySet<PROCESO_ORIENTADOR>(new Action<PROCESO_ORIENTADOR>(this.attach_PROCESO_ORIENTADOR), new Action<PROCESO_ORIENTADOR>(this.detach_PROCESO_ORIENTADOR));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREPROCESO", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string NOMBREPROCESO
		{
			get
			{
				return this._NOMBREPROCESO;
			}
			set
			{
				if ((this._NOMBREPROCESO != value))
				{
					this.OnNOMBREPROCESOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREPROCESO = value;
					this.SendPropertyChanged("NOMBREPROCESO");
					this.OnNOMBREPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOPROCESO", DbType="Bit NOT NULL")]
		public bool ESTADOPROCESO
		{
			get
			{
				return this._ESTADOPROCESO;
			}
			set
			{
				if ((this._ESTADOPROCESO != value))
				{
					this.OnESTADOPROCESOChanging(value);
					this.SendPropertyChanging();
					this._ESTADOPROCESO = value;
					this.SendPropertyChanged("ESTADOPROCESO");
					this.OnESTADOPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_CUESTIONARIO", Storage="_CUESTIONARIO", ThisKey="IDPROCESO", OtherKey="IDPROCESO")]
		public EntitySet<CUESTIONARIO> CUESTIONARIO
		{
			get
			{
				return this._CUESTIONARIO;
			}
			set
			{
				this._CUESTIONARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_ORIENTADORACARGODEPROCESOENPERIODO", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDPROCESO", OtherKey="IDPROCESO")]
		public EntitySet<ORIENTADORACARGODEPROCESOENPERIODO> ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO;
			}
			set
			{
				this._ORIENTADORACARGODEPROCESOENPERIODO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_PROCESO_ORIENTADOR", Storage="_PROCESO_ORIENTADOR", ThisKey="IDPROCESO", OtherKey="IDPROCESO")]
		public EntitySet<PROCESO_ORIENTADOR> PROCESO_ORIENTADOR
		{
			get
			{
				return this._PROCESO_ORIENTADOR;
			}
			set
			{
				this._PROCESO_ORIENTADOR.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = this;
		}
		
		private void detach_CUESTIONARIO(CUESTIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = null;
		}
		
		private void attach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = this;
		}
		
		private void detach_ORIENTADORACARGODEPROCESOENPERIODO(ORIENTADORACARGODEPROCESOENPERIODO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = null;
		}
		
		private void attach_PROCESO_ORIENTADOR(PROCESO_ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = this;
		}
		
		private void detach_PROCESO_ORIENTADOR(PROCESO_ORIENTADOR entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROCESO_ORIENTADOR")]
	public partial class PROCESO_ORIENTADOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDORIENTADOR;
		
		private int _IDPROCESO;
		
		private EntityRef<ORIENTADOR> _ORIENTADOR;
		
		private EntityRef<PROCESO> _PROCESO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    #endregion
		
		public PROCESO_ORIENTADOR()
		{
			this._ORIENTADOR = default(EntityRef<ORIENTADOR>);
			this._PROCESO = default(EntityRef<PROCESO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._PROCESO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_PROCESO_ORIENTADOR", Storage="_ORIENTADOR", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR", IsForeignKey=true)]
		public ORIENTADOR ORIENTADOR
		{
			get
			{
				return this._ORIENTADOR.Entity;
			}
			set
			{
				ORIENTADOR previousValue = this._ORIENTADOR.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADOR.Entity = null;
						previousValue.PROCESO_ORIENTADOR.Remove(this);
					}
					this._ORIENTADOR.Entity = value;
					if ((value != null))
					{
						value.PROCESO_ORIENTADOR.Add(this);
						this._IDORIENTADOR = value.IDORIENTADOR;
					}
					else
					{
						this._IDORIENTADOR = default(int);
					}
					this.SendPropertyChanged("ORIENTADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_PROCESO_ORIENTADOR", Storage="_PROCESO", ThisKey="IDPROCESO", OtherKey="IDPROCESO", IsForeignKey=true)]
		public PROCESO PROCESO
		{
			get
			{
				return this._PROCESO.Entity;
			}
			set
			{
				PROCESO previousValue = this._PROCESO.Entity;
				if (((previousValue != value) 
							|| (this._PROCESO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROCESO.Entity = null;
						previousValue.PROCESO_ORIENTADOR.Remove(this);
					}
					this._PROCESO.Entity = value;
					if ((value != null))
					{
						value.PROCESO_ORIENTADOR.Add(this);
						this._IDPROCESO = value.IDPROCESO;
					}
					else
					{
						this._IDPROCESO = default(int);
					}
					this.SendPropertyChanged("PROCESO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REPRESENTANTE")]
	public partial class REPRESENTANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDREPRESENTANTE;
		
		private System.Nullable<int> _IDORIENTADOR;
		
		private System.Nullable<int> _IDPERSONA;
		
		private string _ANIOLECTIVOREPRESENTANTE;
		
		private string _REFERENCIAREPRESENTANTE;
		
		private string _RELACIONINIOREPRESENTANTE;
		
		private string _CODIGOSAD1;
		
		private string _CODIGOSAD2;
		
		private string _CODIGOSAD3;
		
		private EntitySet<ASISTENCIA> _ASISTENCIA;
		
		private EntitySet<MENOREDAD> _MENOREDAD;
		
		private EntityRef<ORIENTADOR> _ORIENTADOR;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDREPRESENTANTEChanging(int value);
    partial void OnIDREPRESENTANTEChanged();
    partial void OnIDORIENTADORChanging(System.Nullable<int> value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPERSONAChanging(System.Nullable<int> value);
    partial void OnIDPERSONAChanged();
    partial void OnANIOLECTIVOREPRESENTANTEChanging(string value);
    partial void OnANIOLECTIVOREPRESENTANTEChanged();
    partial void OnREFERENCIAREPRESENTANTEChanging(string value);
    partial void OnREFERENCIAREPRESENTANTEChanged();
    partial void OnRELACIONINIOREPRESENTANTEChanging(string value);
    partial void OnRELACIONINIOREPRESENTANTEChanged();
    partial void OnCODIGOSAD1Changing(string value);
    partial void OnCODIGOSAD1Changed();
    partial void OnCODIGOSAD2Changing(string value);
    partial void OnCODIGOSAD2Changed();
    partial void OnCODIGOSAD3Changing(string value);
    partial void OnCODIGOSAD3Changed();
    #endregion
		
		public REPRESENTANTE()
		{
			this._ASISTENCIA = new EntitySet<ASISTENCIA>(new Action<ASISTENCIA>(this.attach_ASISTENCIA), new Action<ASISTENCIA>(this.detach_ASISTENCIA));
			this._MENOREDAD = new EntitySet<MENOREDAD>(new Action<MENOREDAD>(this.attach_MENOREDAD), new Action<MENOREDAD>(this.detach_MENOREDAD));
			this._ORIENTADOR = default(EntityRef<ORIENTADOR>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREPRESENTANTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDREPRESENTANTE
		{
			get
			{
				return this._IDREPRESENTANTE;
			}
			set
			{
				if ((this._IDREPRESENTANTE != value))
				{
					this.OnIDREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._IDREPRESENTANTE = value;
					this.SendPropertyChanged("IDREPRESENTANTE");
					this.OnIDREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int")]
		public System.Nullable<int> IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int")]
		public System.Nullable<int> IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANIOLECTIVOREPRESENTANTE", DbType="VarChar(20)")]
		public string ANIOLECTIVOREPRESENTANTE
		{
			get
			{
				return this._ANIOLECTIVOREPRESENTANTE;
			}
			set
			{
				if ((this._ANIOLECTIVOREPRESENTANTE != value))
				{
					this.OnANIOLECTIVOREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._ANIOLECTIVOREPRESENTANTE = value;
					this.SendPropertyChanged("ANIOLECTIVOREPRESENTANTE");
					this.OnANIOLECTIVOREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REFERENCIAREPRESENTANTE", DbType="VarChar(50)")]
		public string REFERENCIAREPRESENTANTE
		{
			get
			{
				return this._REFERENCIAREPRESENTANTE;
			}
			set
			{
				if ((this._REFERENCIAREPRESENTANTE != value))
				{
					this.OnREFERENCIAREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._REFERENCIAREPRESENTANTE = value;
					this.SendPropertyChanged("REFERENCIAREPRESENTANTE");
					this.OnREFERENCIAREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RELACIONINIOREPRESENTANTE", DbType="VarChar(100)")]
		public string RELACIONINIOREPRESENTANTE
		{
			get
			{
				return this._RELACIONINIOREPRESENTANTE;
			}
			set
			{
				if ((this._RELACIONINIOREPRESENTANTE != value))
				{
					this.OnRELACIONINIOREPRESENTANTEChanging(value);
					this.SendPropertyChanging();
					this._RELACIONINIOREPRESENTANTE = value;
					this.SendPropertyChanged("RELACIONINIOREPRESENTANTE");
					this.OnRELACIONINIOREPRESENTANTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOSAD1", DbType="VarChar(7)")]
		public string CODIGOSAD1
		{
			get
			{
				return this._CODIGOSAD1;
			}
			set
			{
				if ((this._CODIGOSAD1 != value))
				{
					this.OnCODIGOSAD1Changing(value);
					this.SendPropertyChanging();
					this._CODIGOSAD1 = value;
					this.SendPropertyChanged("CODIGOSAD1");
					this.OnCODIGOSAD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOSAD2", DbType="VarChar(7)")]
		public string CODIGOSAD2
		{
			get
			{
				return this._CODIGOSAD2;
			}
			set
			{
				if ((this._CODIGOSAD2 != value))
				{
					this.OnCODIGOSAD2Changing(value);
					this.SendPropertyChanging();
					this._CODIGOSAD2 = value;
					this.SendPropertyChanged("CODIGOSAD2");
					this.OnCODIGOSAD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGOSAD3", DbType="VarChar(7)")]
		public string CODIGOSAD3
		{
			get
			{
				return this._CODIGOSAD3;
			}
			set
			{
				if ((this._CODIGOSAD3 != value))
				{
					this.OnCODIGOSAD3Changing(value);
					this.SendPropertyChanging();
					this._CODIGOSAD3 = value;
					this.SendPropertyChanged("CODIGOSAD3");
					this.OnCODIGOSAD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REPRESENTANTE_ASISTENCIA", Storage="_ASISTENCIA", ThisKey="IDREPRESENTANTE", OtherKey="IDLINEADEACCION")]
		public EntitySet<ASISTENCIA> ASISTENCIA
		{
			get
			{
				return this._ASISTENCIA;
			}
			set
			{
				this._ASISTENCIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REPRESENTANTE_MENOREDAD", Storage="_MENOREDAD", ThisKey="IDREPRESENTANTE", OtherKey="IDREPRESENTANTE")]
		public EntitySet<MENOREDAD> MENOREDAD
		{
			get
			{
				return this._MENOREDAD;
			}
			set
			{
				this._MENOREDAD.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADOR_REPRESENTANTE", Storage="_ORIENTADOR", ThisKey="IDORIENTADOR", OtherKey="IDORIENTADOR", IsForeignKey=true)]
		public ORIENTADOR ORIENTADOR
		{
			get
			{
				return this._ORIENTADOR.Entity;
			}
			set
			{
				ORIENTADOR previousValue = this._ORIENTADOR.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADOR.Entity = null;
						previousValue.REPRESENTANTE.Remove(this);
					}
					this._ORIENTADOR.Entity = value;
					if ((value != null))
					{
						value.REPRESENTANTE.Add(this);
						this._IDORIENTADOR = value.IDORIENTADOR;
					}
					else
					{
						this._IDORIENTADOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("ORIENTADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_REPRESENTANTE", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.REPRESENTANTE.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.REPRESENTANTE.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(Nullable<int>);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.REPRESENTANTE = this;
		}
		
		private void detach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.REPRESENTANTE = null;
		}
		
		private void attach_MENOREDAD(MENOREDAD entity)
		{
			this.SendPropertyChanging();
			entity.REPRESENTANTE = this;
		}
		
		private void detach_MENOREDAD(MENOREDAD entity)
		{
			this.SendPropertyChanging();
			entity.REPRESENTANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REUNION")]
	public partial class REUNION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDREUNION;
		
		private int _IDLINEADEACCION;
		
		private int _IDORIENTADOR;
		
		private int _IDPROCESO;
		
		private int _IDPERIODO;
		
		private int _IDTIPOASISTENTES;
		
		private string _TEMAREUNION;
		
		private System.DateTime _FECHAREUNION;
		
		private System.TimeSpan _HORAREUNION;
		
		private bool _ESTADOREUNION;
		
		private string _OBSERVACIONREUNION;
		
		private EntitySet<ASISTENCIAREUNION> _ASISTENCIAREUNION;
		
		private EntityRef<ORIENTADORACARGODEPROCESOENPERIODO> _ORIENTADORACARGODEPROCESOENPERIODO;
		
		private EntityRef<TIPOASISTENTES> _TIPOASISTENTES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDREUNIONChanging(int value);
    partial void OnIDREUNIONChanged();
    partial void OnIDLINEADEACCIONChanging(int value);
    partial void OnIDLINEADEACCIONChanged();
    partial void OnIDORIENTADORChanging(int value);
    partial void OnIDORIENTADORChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnIDTIPOASISTENTESChanging(int value);
    partial void OnIDTIPOASISTENTESChanged();
    partial void OnTEMAREUNIONChanging(string value);
    partial void OnTEMAREUNIONChanged();
    partial void OnFECHAREUNIONChanging(System.DateTime value);
    partial void OnFECHAREUNIONChanged();
    partial void OnHORAREUNIONChanging(System.TimeSpan value);
    partial void OnHORAREUNIONChanged();
    partial void OnESTADOREUNIONChanging(bool value);
    partial void OnESTADOREUNIONChanged();
    partial void OnOBSERVACIONREUNIONChanging(string value);
    partial void OnOBSERVACIONREUNIONChanged();
    #endregion
		
		public REUNION()
		{
			this._ASISTENCIAREUNION = new EntitySet<ASISTENCIAREUNION>(new Action<ASISTENCIAREUNION>(this.attach_ASISTENCIAREUNION), new Action<ASISTENCIAREUNION>(this.detach_ASISTENCIAREUNION));
			this._ORIENTADORACARGODEPROCESOENPERIODO = default(EntityRef<ORIENTADORACARGODEPROCESOENPERIODO>);
			this._TIPOASISTENTES = default(EntityRef<TIPOASISTENTES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDREUNION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDREUNION
		{
			get
			{
				return this._IDREUNION;
			}
			set
			{
				if ((this._IDREUNION != value))
				{
					this.OnIDREUNIONChanging(value);
					this.SendPropertyChanging();
					this._IDREUNION = value;
					this.SendPropertyChanged("IDREUNION");
					this.OnIDREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLINEADEACCION", DbType="Int NOT NULL")]
		public int IDLINEADEACCION
		{
			get
			{
				return this._IDLINEADEACCION;
			}
			set
			{
				if ((this._IDLINEADEACCION != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLINEADEACCIONChanging(value);
					this.SendPropertyChanging();
					this._IDLINEADEACCION = value;
					this.SendPropertyChanged("IDLINEADEACCION");
					this.OnIDLINEADEACCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDORIENTADOR", DbType="Int NOT NULL")]
		public int IDORIENTADOR
		{
			get
			{
				return this._IDORIENTADOR;
			}
			set
			{
				if ((this._IDORIENTADOR != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDORIENTADORChanging(value);
					this.SendPropertyChanging();
					this._IDORIENTADOR = value;
					this.SendPropertyChanged("IDORIENTADOR");
					this.OnIDORIENTADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL")]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL")]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOASISTENTES", DbType="Int NOT NULL")]
		public int IDTIPOASISTENTES
		{
			get
			{
				return this._IDTIPOASISTENTES;
			}
			set
			{
				if ((this._IDTIPOASISTENTES != value))
				{
					if (this._TIPOASISTENTES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIPOASISTENTESChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOASISTENTES = value;
					this.SendPropertyChanged("IDTIPOASISTENTES");
					this.OnIDTIPOASISTENTESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMAREUNION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEMAREUNION
		{
			get
			{
				return this._TEMAREUNION;
			}
			set
			{
				if ((this._TEMAREUNION != value))
				{
					this.OnTEMAREUNIONChanging(value);
					this.SendPropertyChanging();
					this._TEMAREUNION = value;
					this.SendPropertyChanged("TEMAREUNION");
					this.OnTEMAREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAREUNION", DbType="Date NOT NULL")]
		public System.DateTime FECHAREUNION
		{
			get
			{
				return this._FECHAREUNION;
			}
			set
			{
				if ((this._FECHAREUNION != value))
				{
					this.OnFECHAREUNIONChanging(value);
					this.SendPropertyChanging();
					this._FECHAREUNION = value;
					this.SendPropertyChanged("FECHAREUNION");
					this.OnFECHAREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORAREUNION", DbType="Time NOT NULL")]
		public System.TimeSpan HORAREUNION
		{
			get
			{
				return this._HORAREUNION;
			}
			set
			{
				if ((this._HORAREUNION != value))
				{
					this.OnHORAREUNIONChanging(value);
					this.SendPropertyChanging();
					this._HORAREUNION = value;
					this.SendPropertyChanged("HORAREUNION");
					this.OnHORAREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADOREUNION", DbType="Bit NOT NULL")]
		public bool ESTADOREUNION
		{
			get
			{
				return this._ESTADOREUNION;
			}
			set
			{
				if ((this._ESTADOREUNION != value))
				{
					this.OnESTADOREUNIONChanging(value);
					this.SendPropertyChanging();
					this._ESTADOREUNION = value;
					this.SendPropertyChanged("ESTADOREUNION");
					this.OnESTADOREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACIONREUNION", DbType="VarChar(100)")]
		public string OBSERVACIONREUNION
		{
			get
			{
				return this._OBSERVACIONREUNION;
			}
			set
			{
				if ((this._OBSERVACIONREUNION != value))
				{
					this.OnOBSERVACIONREUNIONChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACIONREUNION = value;
					this.SendPropertyChanged("OBSERVACIONREUNION");
					this.OnOBSERVACIONREUNIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REUNION_ASISTENCIAREUNION", Storage="_ASISTENCIAREUNION", ThisKey="IDREUNION", OtherKey="IDREUNION")]
		public EntitySet<ASISTENCIAREUNION> ASISTENCIAREUNION
		{
			get
			{
				return this._ASISTENCIAREUNION;
			}
			set
			{
				this._ASISTENCIAREUNION.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORIENTADORACARGODEPROCESOENPERIODO_REUNION", Storage="_ORIENTADORACARGODEPROCESOENPERIODO", ThisKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", OtherKey="IDLINEADEACCION,IDORIENTADOR,IDPROCESO,IDPERIODO", IsForeignKey=true)]
		public ORIENTADORACARGODEPROCESOENPERIODO ORIENTADORACARGODEPROCESOENPERIODO
		{
			get
			{
				return this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
			}
			set
			{
				ORIENTADORACARGODEPROCESOENPERIODO previousValue = this._ORIENTADORACARGODEPROCESOENPERIODO.Entity;
				if (((previousValue != value) 
							|| (this._ORIENTADORACARGODEPROCESOENPERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = null;
						previousValue.REUNION.Remove(this);
					}
					this._ORIENTADORACARGODEPROCESOENPERIODO.Entity = value;
					if ((value != null))
					{
						value.REUNION.Add(this);
						this._IDLINEADEACCION = value.IDLINEADEACCION;
						this._IDORIENTADOR = value.IDORIENTADOR;
						this._IDPROCESO = value.IDPROCESO;
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDLINEADEACCION = default(int);
						this._IDORIENTADOR = default(int);
						this._IDPROCESO = default(int);
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("ORIENTADORACARGODEPROCESOENPERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENTES_REUNION", Storage="_TIPOASISTENTES", ThisKey="IDTIPOASISTENTES", OtherKey="IDTIPOASISTENTES", IsForeignKey=true)]
		public TIPOASISTENTES TIPOASISTENTES
		{
			get
			{
				return this._TIPOASISTENTES.Entity;
			}
			set
			{
				TIPOASISTENTES previousValue = this._TIPOASISTENTES.Entity;
				if (((previousValue != value) 
							|| (this._TIPOASISTENTES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOASISTENTES.Entity = null;
						previousValue.REUNION.Remove(this);
					}
					this._TIPOASISTENTES.Entity = value;
					if ((value != null))
					{
						value.REUNION.Add(this);
						this._IDTIPOASISTENTES = value.IDTIPOASISTENTES;
					}
					else
					{
						this._IDTIPOASISTENTES = default(int);
					}
					this.SendPropertyChanged("TIPOASISTENTES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.REUNION = this;
		}
		
		private void detach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.REUNION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SOLUCIONCUESTIONARIO")]
	public partial class SOLUCIONCUESTIONARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSOLUCIONCUESTIONARIO;
		
		private int _IDPROCESO;
		
		private int _IDOBJETIVO;
		
		private int _IDINDICADOR;
		
		private int _IDPREGUNTA;
		
		private int _IDPERSONA;
		
		private int _IDPERIODO;
		
		private System.DateTime _FECHASOLUCIONCUESTIONARIO;
		
		private string _TEXTOSOLUCIONCUESTIONARIO;
		
		private EntityRef<CUESTIONARIO> _CUESTIONARIO;
		
		private EntityRef<PERIODO> _PERIODO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSOLUCIONCUESTIONARIOChanging(int value);
    partial void OnIDSOLUCIONCUESTIONARIOChanged();
    partial void OnIDPROCESOChanging(int value);
    partial void OnIDPROCESOChanged();
    partial void OnIDOBJETIVOChanging(int value);
    partial void OnIDOBJETIVOChanged();
    partial void OnIDINDICADORChanging(int value);
    partial void OnIDINDICADORChanged();
    partial void OnIDPREGUNTAChanging(int value);
    partial void OnIDPREGUNTAChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnIDPERIODOChanging(int value);
    partial void OnIDPERIODOChanged();
    partial void OnFECHASOLUCIONCUESTIONARIOChanging(System.DateTime value);
    partial void OnFECHASOLUCIONCUESTIONARIOChanged();
    partial void OnTEXTOSOLUCIONCUESTIONARIOChanging(string value);
    partial void OnTEXTOSOLUCIONCUESTIONARIOChanged();
    #endregion
		
		public SOLUCIONCUESTIONARIO()
		{
			this._CUESTIONARIO = default(EntityRef<CUESTIONARIO>);
			this._PERIODO = default(EntityRef<PERIODO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSOLUCIONCUESTIONARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDSOLUCIONCUESTIONARIO
		{
			get
			{
				return this._IDSOLUCIONCUESTIONARIO;
			}
			set
			{
				if ((this._IDSOLUCIONCUESTIONARIO != value))
				{
					this.OnIDSOLUCIONCUESTIONARIOChanging(value);
					this.SendPropertyChanging();
					this._IDSOLUCIONCUESTIONARIO = value;
					this.SendPropertyChanged("IDSOLUCIONCUESTIONARIO");
					this.OnIDSOLUCIONCUESTIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPROCESO", DbType="Int NOT NULL")]
		public int IDPROCESO
		{
			get
			{
				return this._IDPROCESO;
			}
			set
			{
				if ((this._IDPROCESO != value))
				{
					if (this._CUESTIONARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPROCESOChanging(value);
					this.SendPropertyChanging();
					this._IDPROCESO = value;
					this.SendPropertyChanged("IDPROCESO");
					this.OnIDPROCESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOBJETIVO", DbType="Int NOT NULL")]
		public int IDOBJETIVO
		{
			get
			{
				return this._IDOBJETIVO;
			}
			set
			{
				if ((this._IDOBJETIVO != value))
				{
					if (this._CUESTIONARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDOBJETIVOChanging(value);
					this.SendPropertyChanging();
					this._IDOBJETIVO = value;
					this.SendPropertyChanged("IDOBJETIVO");
					this.OnIDOBJETIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDINDICADOR", DbType="Int NOT NULL")]
		public int IDINDICADOR
		{
			get
			{
				return this._IDINDICADOR;
			}
			set
			{
				if ((this._IDINDICADOR != value))
				{
					if (this._CUESTIONARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDINDICADORChanging(value);
					this.SendPropertyChanging();
					this._IDINDICADOR = value;
					this.SendPropertyChanged("IDINDICADOR");
					this.OnIDINDICADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPREGUNTA", DbType="Int NOT NULL")]
		public int IDPREGUNTA
		{
			get
			{
				return this._IDPREGUNTA;
			}
			set
			{
				if ((this._IDPREGUNTA != value))
				{
					if (this._CUESTIONARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDPREGUNTA = value;
					this.SendPropertyChanged("IDPREGUNTA");
					this.OnIDPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERIODO", DbType="Int NOT NULL")]
		public int IDPERIODO
		{
			get
			{
				return this._IDPERIODO;
			}
			set
			{
				if ((this._IDPERIODO != value))
				{
					if (this._PERIODO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDPERIODO = value;
					this.SendPropertyChanged("IDPERIODO");
					this.OnIDPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHASOLUCIONCUESTIONARIO", DbType="Date NOT NULL")]
		public System.DateTime FECHASOLUCIONCUESTIONARIO
		{
			get
			{
				return this._FECHASOLUCIONCUESTIONARIO;
			}
			set
			{
				if ((this._FECHASOLUCIONCUESTIONARIO != value))
				{
					this.OnFECHASOLUCIONCUESTIONARIOChanging(value);
					this.SendPropertyChanging();
					this._FECHASOLUCIONCUESTIONARIO = value;
					this.SendPropertyChanged("FECHASOLUCIONCUESTIONARIO");
					this.OnFECHASOLUCIONCUESTIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEXTOSOLUCIONCUESTIONARIO", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TEXTOSOLUCIONCUESTIONARIO
		{
			get
			{
				return this._TEXTOSOLUCIONCUESTIONARIO;
			}
			set
			{
				if ((this._TEXTOSOLUCIONCUESTIONARIO != value))
				{
					this.OnTEXTOSOLUCIONCUESTIONARIOChanging(value);
					this.SendPropertyChanging();
					this._TEXTOSOLUCIONCUESTIONARIO = value;
					this.SendPropertyChanged("TEXTOSOLUCIONCUESTIONARIO");
					this.OnTEXTOSOLUCIONCUESTIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUESTIONARIO_SOLUCIONCUESTIONARIO", Storage="_CUESTIONARIO", ThisKey="IDPROCESO,IDOBJETIVO,IDINDICADOR,IDPREGUNTA", OtherKey="IDPROCESO,IDOBJETIVO,IDINDICADOR,IDPREGUNTA", IsForeignKey=true)]
		public CUESTIONARIO CUESTIONARIO
		{
			get
			{
				return this._CUESTIONARIO.Entity;
			}
			set
			{
				CUESTIONARIO previousValue = this._CUESTIONARIO.Entity;
				if (((previousValue != value) 
							|| (this._CUESTIONARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUESTIONARIO.Entity = null;
						previousValue.SOLUCIONCUESTIONARIO.Remove(this);
					}
					this._CUESTIONARIO.Entity = value;
					if ((value != null))
					{
						value.SOLUCIONCUESTIONARIO.Add(this);
						this._IDPROCESO = value.IDPROCESO;
						this._IDOBJETIVO = value.IDOBJETIVO;
						this._IDINDICADOR = value.IDINDICADOR;
						this._IDPREGUNTA = value.IDPREGUNTA;
					}
					else
					{
						this._IDPROCESO = default(int);
						this._IDOBJETIVO = default(int);
						this._IDINDICADOR = default(int);
						this._IDPREGUNTA = default(int);
					}
					this.SendPropertyChanged("CUESTIONARIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERIODO_SOLUCIONCUESTIONARIO", Storage="_PERIODO", ThisKey="IDPERIODO", OtherKey="IDPERIODO", IsForeignKey=true)]
		public PERIODO PERIODO
		{
			get
			{
				return this._PERIODO.Entity;
			}
			set
			{
				PERIODO previousValue = this._PERIODO.Entity;
				if (((previousValue != value) 
							|| (this._PERIODO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERIODO.Entity = null;
						previousValue.SOLUCIONCUESTIONARIO.Remove(this);
					}
					this._PERIODO.Entity = value;
					if ((value != null))
					{
						value.SOLUCIONCUESTIONARIO.Add(this);
						this._IDPERIODO = value.IDPERIODO;
					}
					else
					{
						this._IDPERIODO = default(int);
					}
					this.SendPropertyChanged("PERIODO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_SOLUCIONCUESTIONARIO", Storage="_PERSONA", ThisKey="IDPERSONA", OtherKey="IDPERSONA", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.SOLUCIONCUESTIONARIO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.SOLUCIONCUESTIONARIO.Add(this);
						this._IDPERSONA = value.IDPERSONA;
					}
					else
					{
						this._IDPERSONA = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TELEFONOPERSONA")]
	public partial class TELEFONOPERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTELEFONO;
		
		private int _IDPERSONA;
		
		private string _TELEFONOPERSONA1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTELEFONOChanging(int value);
    partial void OnIDTELEFONOChanged();
    partial void OnIDPERSONAChanging(int value);
    partial void OnIDPERSONAChanged();
    partial void OnTELEFONOPERSONA1Changing(string value);
    partial void OnTELEFONOPERSONA1Changed();
    #endregion
		
		public TELEFONOPERSONA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTELEFONO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTELEFONO
		{
			get
			{
				return this._IDTELEFONO;
			}
			set
			{
				if ((this._IDTELEFONO != value))
				{
					this.OnIDTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._IDTELEFONO = value;
					this.SendPropertyChanged("IDTELEFONO");
					this.OnIDTELEFONOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERSONA", DbType="Int NOT NULL")]
		public int IDPERSONA
		{
			get
			{
				return this._IDPERSONA;
			}
			set
			{
				if ((this._IDPERSONA != value))
				{
					this.OnIDPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDPERSONA = value;
					this.SendPropertyChanged("IDPERSONA");
					this.OnIDPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOPERSONA1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TELEFONOPERSONA1
		{
			get
			{
				return this._TELEFONOPERSONA1;
			}
			set
			{
				if ((this._TELEFONOPERSONA1 != value))
				{
					this.OnTELEFONOPERSONA1Changing(value);
					this.SendPropertyChanging();
					this._TELEFONOPERSONA1 = value;
					this.SendPropertyChanged("TELEFONOPERSONA1");
					this.OnTELEFONOPERSONA1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOASISTENCIA")]
	public partial class TIPOASISTENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOASISTENCIA;
		
		private string _NOMBRETIPOASISTENCIA;
		
		private EntitySet<ASISTENCIA> _ASISTENCIA;
		
		private EntitySet<ASISTENCIAREUNION> _ASISTENCIAREUNION;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOASISTENCIAChanging(int value);
    partial void OnIDTIPOASISTENCIAChanged();
    partial void OnNOMBRETIPOASISTENCIAChanging(string value);
    partial void OnNOMBRETIPOASISTENCIAChanged();
    #endregion
		
		public TIPOASISTENCIA()
		{
			this._ASISTENCIA = new EntitySet<ASISTENCIA>(new Action<ASISTENCIA>(this.attach_ASISTENCIA), new Action<ASISTENCIA>(this.detach_ASISTENCIA));
			this._ASISTENCIAREUNION = new EntitySet<ASISTENCIAREUNION>(new Action<ASISTENCIAREUNION>(this.attach_ASISTENCIAREUNION), new Action<ASISTENCIAREUNION>(this.detach_ASISTENCIAREUNION));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOASISTENCIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOASISTENCIA
		{
			get
			{
				return this._IDTIPOASISTENCIA;
			}
			set
			{
				if ((this._IDTIPOASISTENCIA != value))
				{
					this.OnIDTIPOASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOASISTENCIA = value;
					this.SendPropertyChanged("IDTIPOASISTENCIA");
					this.OnIDTIPOASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRETIPOASISTENCIA", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NOMBRETIPOASISTENCIA
		{
			get
			{
				return this._NOMBRETIPOASISTENCIA;
			}
			set
			{
				if ((this._NOMBRETIPOASISTENCIA != value))
				{
					this.OnNOMBRETIPOASISTENCIAChanging(value);
					this.SendPropertyChanging();
					this._NOMBRETIPOASISTENCIA = value;
					this.SendPropertyChanged("NOMBRETIPOASISTENCIA");
					this.OnNOMBRETIPOASISTENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENCIA_ASISTENCIA", Storage="_ASISTENCIA", ThisKey="IDTIPOASISTENCIA", OtherKey="IDTIPOASISTENCIA")]
		public EntitySet<ASISTENCIA> ASISTENCIA
		{
			get
			{
				return this._ASISTENCIA;
			}
			set
			{
				this._ASISTENCIA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENCIA_ASISTENCIAREUNION", Storage="_ASISTENCIAREUNION", ThisKey="IDTIPOASISTENCIA", OtherKey="IDTIPOASISTENCIA")]
		public EntitySet<ASISTENCIAREUNION> ASISTENCIAREUNION
		{
			get
			{
				return this._ASISTENCIAREUNION;
			}
			set
			{
				this._ASISTENCIAREUNION.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENCIA = this;
		}
		
		private void detach_ASISTENCIA(ASISTENCIA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENCIA = null;
		}
		
		private void attach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENCIA = this;
		}
		
		private void detach_ASISTENCIAREUNION(ASISTENCIAREUNION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENCIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOASISTENTES")]
	public partial class TIPOASISTENTES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOASISTENTES;
		
		private string _NOMBRETIPOASISTENTES;
		
		private EntitySet<REUNION> _REUNION;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOASISTENTESChanging(int value);
    partial void OnIDTIPOASISTENTESChanged();
    partial void OnNOMBRETIPOASISTENTESChanging(string value);
    partial void OnNOMBRETIPOASISTENTESChanged();
    #endregion
		
		public TIPOASISTENTES()
		{
			this._REUNION = new EntitySet<REUNION>(new Action<REUNION>(this.attach_REUNION), new Action<REUNION>(this.detach_REUNION));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOASISTENTES", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOASISTENTES
		{
			get
			{
				return this._IDTIPOASISTENTES;
			}
			set
			{
				if ((this._IDTIPOASISTENTES != value))
				{
					this.OnIDTIPOASISTENTESChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOASISTENTES = value;
					this.SendPropertyChanged("IDTIPOASISTENTES");
					this.OnIDTIPOASISTENTESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRETIPOASISTENTES", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NOMBRETIPOASISTENTES
		{
			get
			{
				return this._NOMBRETIPOASISTENTES;
			}
			set
			{
				if ((this._NOMBRETIPOASISTENTES != value))
				{
					this.OnNOMBRETIPOASISTENTESChanging(value);
					this.SendPropertyChanging();
					this._NOMBRETIPOASISTENTES = value;
					this.SendPropertyChanged("NOMBRETIPOASISTENTES");
					this.OnNOMBRETIPOASISTENTESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOASISTENTES_REUNION", Storage="_REUNION", ThisKey="IDTIPOASISTENTES", OtherKey="IDTIPOASISTENTES")]
		public EntitySet<REUNION> REUNION
		{
			get
			{
				return this._REUNION;
			}
			set
			{
				this._REUNION.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REUNION(REUNION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENTES = this;
		}
		
		private void detach_REUNION(REUNION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOASISTENTES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOFAMILIA")]
	public partial class TIPOFAMILIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOFAMILIA;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _ESTADO;
		
		private System.Nullable<System.DateTime> _FECHA;
		
		private EntitySet<FAMILIA> _FAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOFAMILIAChanging(int value);
    partial void OnIDTIPOFAMILIAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnESTADOChanging(System.Nullable<int> value);
    partial void OnESTADOChanged();
    partial void OnFECHAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAChanged();
    #endregion
		
		public TIPOFAMILIA()
		{
			this._FAMILIA = new EntitySet<FAMILIA>(new Action<FAMILIA>(this.attach_FAMILIA), new Action<FAMILIA>(this.detach_FAMILIA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOFAMILIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTIPOFAMILIA
		{
			get
			{
				return this._IDTIPOFAMILIA;
			}
			set
			{
				if ((this._IDTIPOFAMILIA != value))
				{
					this.OnIDTIPOFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOFAMILIA = value;
					this.SendPropertyChanged("IDTIPOFAMILIA");
					this.OnIDTIPOFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO", DbType="Int")]
		public System.Nullable<int> ESTADO
		{
			get
			{
				return this._ESTADO;
			}
			set
			{
				if ((this._ESTADO != value))
				{
					this.OnESTADOChanging(value);
					this.SendPropertyChanging();
					this._ESTADO = value;
					this.SendPropertyChanged("ESTADO");
					this.OnESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOFAMILIA_FAMILIA", Storage="_FAMILIA", ThisKey="IDTIPOFAMILIA", OtherKey="IDTIPOFAMILIA")]
		public EntitySet<FAMILIA> FAMILIA
		{
			get
			{
				return this._FAMILIA;
			}
			set
			{
				this._FAMILIA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAMILIA(FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOFAMILIA = this;
		}
		
		private void detach_FAMILIA(FAMILIA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOFAMILIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOPERIODO")]
	public partial class TIPOPERIODO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOPERIODO;
		
		private string _NOMBRETIPOPERIODO;
		
		private EntitySet<PERIODO> _PERIODO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOPERIODOChanging(int value);
    partial void OnIDTIPOPERIODOChanged();
    partial void OnNOMBRETIPOPERIODOChanging(string value);
    partial void OnNOMBRETIPOPERIODOChanged();
    #endregion
		
		public TIPOPERIODO()
		{
			this._PERIODO = new EntitySet<PERIODO>(new Action<PERIODO>(this.attach_PERIODO), new Action<PERIODO>(this.detach_PERIODO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPERIODO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTIPOPERIODO
		{
			get
			{
				return this._IDTIPOPERIODO;
			}
			set
			{
				if ((this._IDTIPOPERIODO != value))
				{
					this.OnIDTIPOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPERIODO = value;
					this.SendPropertyChanged("IDTIPOPERIODO");
					this.OnIDTIPOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRETIPOPERIODO", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NOMBRETIPOPERIODO
		{
			get
			{
				return this._NOMBRETIPOPERIODO;
			}
			set
			{
				if ((this._NOMBRETIPOPERIODO != value))
				{
					this.OnNOMBRETIPOPERIODOChanging(value);
					this.SendPropertyChanging();
					this._NOMBRETIPOPERIODO = value;
					this.SendPropertyChanged("NOMBRETIPOPERIODO");
					this.OnNOMBRETIPOPERIODOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPERIODO_PERIODO", Storage="_PERIODO", ThisKey="IDTIPOPERIODO", OtherKey="IDTIPOPERIODO")]
		public EntitySet<PERIODO> PERIODO
		{
			get
			{
				return this._PERIODO;
			}
			set
			{
				this._PERIODO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERIODO(PERIODO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPERIODO = this;
		}
		
		private void detach_PERIODO(PERIODO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPERIODO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOPERSONA")]
	public partial class TIPOPERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOPERSONA;
		
		private string _NOMBRETIPOPERSONA;
		
		private System.Nullable<int> _EDADMINIMA;
		
		private System.Nullable<int> _EDADMAXIMA;
		
		private EntitySet<LINEADEACCION> _LINEADEACCION;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOPERSONAChanging(int value);
    partial void OnIDTIPOPERSONAChanged();
    partial void OnNOMBRETIPOPERSONAChanging(string value);
    partial void OnNOMBRETIPOPERSONAChanged();
    partial void OnEDADMINIMAChanging(System.Nullable<int> value);
    partial void OnEDADMINIMAChanged();
    partial void OnEDADMAXIMAChanging(System.Nullable<int> value);
    partial void OnEDADMAXIMAChanged();
    #endregion
		
		public TIPOPERSONA()
		{
			this._LINEADEACCION = new EntitySet<LINEADEACCION>(new Action<LINEADEACCION>(this.attach_LINEADEACCION), new Action<LINEADEACCION>(this.detach_LINEADEACCION));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPERSONA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIPOPERSONA
		{
			get
			{
				return this._IDTIPOPERSONA;
			}
			set
			{
				if ((this._IDTIPOPERSONA != value))
				{
					this.OnIDTIPOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPERSONA = value;
					this.SendPropertyChanged("IDTIPOPERSONA");
					this.OnIDTIPOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRETIPOPERSONA", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRETIPOPERSONA
		{
			get
			{
				return this._NOMBRETIPOPERSONA;
			}
			set
			{
				if ((this._NOMBRETIPOPERSONA != value))
				{
					this.OnNOMBRETIPOPERSONAChanging(value);
					this.SendPropertyChanging();
					this._NOMBRETIPOPERSONA = value;
					this.SendPropertyChanged("NOMBRETIPOPERSONA");
					this.OnNOMBRETIPOPERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDADMINIMA", DbType="Int")]
		public System.Nullable<int> EDADMINIMA
		{
			get
			{
				return this._EDADMINIMA;
			}
			set
			{
				if ((this._EDADMINIMA != value))
				{
					this.OnEDADMINIMAChanging(value);
					this.SendPropertyChanging();
					this._EDADMINIMA = value;
					this.SendPropertyChanged("EDADMINIMA");
					this.OnEDADMINIMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDADMAXIMA", DbType="Int")]
		public System.Nullable<int> EDADMAXIMA
		{
			get
			{
				return this._EDADMAXIMA;
			}
			set
			{
				if ((this._EDADMAXIMA != value))
				{
					this.OnEDADMAXIMAChanging(value);
					this.SendPropertyChanging();
					this._EDADMAXIMA = value;
					this.SendPropertyChanged("EDADMAXIMA");
					this.OnEDADMAXIMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPERSONA_LINEADEACCION", Storage="_LINEADEACCION", ThisKey="IDTIPOPERSONA", OtherKey="IDTIPOPERSONA")]
		public EntitySet<LINEADEACCION> LINEADEACCION
		{
			get
			{
				return this._LINEADEACCION;
			}
			set
			{
				this._LINEADEACCION.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LINEADEACCION(LINEADEACCION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPERSONA = this;
		}
		
		private void detach_LINEADEACCION(LINEADEACCION entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPERSONA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOPREGUNTA")]
	public partial class TIPOPREGUNTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIPOPREGUNTA;
		
		private string _NOMBRETIPOPREGUNTA;
		
		private EntitySet<PREGUNTA> _PREGUNTA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIPOPREGUNTAChanging(int value);
    partial void OnIDTIPOPREGUNTAChanged();
    partial void OnNOMBRETIPOPREGUNTAChanging(string value);
    partial void OnNOMBRETIPOPREGUNTAChanged();
    #endregion
		
		public TIPOPREGUNTA()
		{
			this._PREGUNTA = new EntitySet<PREGUNTA>(new Action<PREGUNTA>(this.attach_PREGUNTA), new Action<PREGUNTA>(this.detach_PREGUNTA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIPOPREGUNTA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTIPOPREGUNTA
		{
			get
			{
				return this._IDTIPOPREGUNTA;
			}
			set
			{
				if ((this._IDTIPOPREGUNTA != value))
				{
					this.OnIDTIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._IDTIPOPREGUNTA = value;
					this.SendPropertyChanged("IDTIPOPREGUNTA");
					this.OnIDTIPOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRETIPOPREGUNTA", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NOMBRETIPOPREGUNTA
		{
			get
			{
				return this._NOMBRETIPOPREGUNTA;
			}
			set
			{
				if ((this._NOMBRETIPOPREGUNTA != value))
				{
					this.OnNOMBRETIPOPREGUNTAChanging(value);
					this.SendPropertyChanging();
					this._NOMBRETIPOPREGUNTA = value;
					this.SendPropertyChanged("NOMBRETIPOPREGUNTA");
					this.OnNOMBRETIPOPREGUNTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOPREGUNTA_PREGUNTA", Storage="_PREGUNTA", ThisKey="IDTIPOPREGUNTA", OtherKey="IDTIPOPREGUNTA")]
		public EntitySet<PREGUNTA> PREGUNTA
		{
			get
			{
				return this._PREGUNTA;
			}
			set
			{
				this._PREGUNTA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PREGUNTA(PREGUNTA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPREGUNTA = this;
		}
		
		private void detach_PREGUNTA(PREGUNTA entity)
		{
			this.SendPropertyChanging();
			entity.TIPOPREGUNTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private System.Guid _UserIdAsp;
		
		private string _NombreUsuario;
		
		private string _ApellidoUsuario;
		
		private System.Nullable<char> _GeneroUsuario;
		
		private bool _EstadoUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUserIdAspChanging(System.Guid value);
    partial void OnUserIdAspChanged();
    partial void OnNombreUsuarioChanging(string value);
    partial void OnNombreUsuarioChanged();
    partial void OnApellidoUsuarioChanging(string value);
    partial void OnApellidoUsuarioChanged();
    partial void OnGeneroUsuarioChanging(System.Nullable<char> value);
    partial void OnGeneroUsuarioChanged();
    partial void OnEstadoUsuarioChanging(bool value);
    partial void OnEstadoUsuarioChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdAsp", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserIdAsp
		{
			get
			{
				return this._UserIdAsp;
			}
			set
			{
				if ((this._UserIdAsp != value))
				{
					this.OnUserIdAspChanging(value);
					this.SendPropertyChanging();
					this._UserIdAsp = value;
					this.SendPropertyChanged("UserIdAsp");
					this.OnUserIdAspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreUsuario", DbType="VarChar(50)")]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this.OnNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NombreUsuario = value;
					this.SendPropertyChanged("NombreUsuario");
					this.OnNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoUsuario", DbType="VarChar(50)")]
		public string ApellidoUsuario
		{
			get
			{
				return this._ApellidoUsuario;
			}
			set
			{
				if ((this._ApellidoUsuario != value))
				{
					this.OnApellidoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._ApellidoUsuario = value;
					this.SendPropertyChanged("ApellidoUsuario");
					this.OnApellidoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneroUsuario", DbType="Char(1)")]
		public System.Nullable<char> GeneroUsuario
		{
			get
			{
				return this._GeneroUsuario;
			}
			set
			{
				if ((this._GeneroUsuario != value))
				{
					this.OnGeneroUsuarioChanging(value);
					this.SendPropertyChanging();
					this._GeneroUsuario = value;
					this.SendPropertyChanged("GeneroUsuario");
					this.OnGeneroUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoUsuario", DbType="Bit NOT NULL")]
		public bool EstadoUsuario
		{
			get
			{
				return this._EstadoUsuario;
			}
			set
			{
				if ((this._EstadoUsuario != value))
				{
					this.OnEstadoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._EstadoUsuario = value;
					this.SendPropertyChanged("EstadoUsuario");
					this.OnEstadoUsuarioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISITADOMICILIAR")]
	public partial class VISITADOMICILIAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDVISITADOMICILIAR;
		
		private System.Nullable<int> _IDFAMILIA;
		
		private string _AREAVISITADOMICILIAR;
		
		private string _MODALIDADVISTADOMICILIAR;
		
		private bool _PERSONAREFERENCIA;
		
		private System.DateTime _FECHAVISITA;
		
		private EntityRef<FAMILIA> _FAMILIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVISITADOMICILIARChanging(int value);
    partial void OnIDVISITADOMICILIARChanged();
    partial void OnIDFAMILIAChanging(System.Nullable<int> value);
    partial void OnIDFAMILIAChanged();
    partial void OnAREAVISITADOMICILIARChanging(string value);
    partial void OnAREAVISITADOMICILIARChanged();
    partial void OnMODALIDADVISTADOMICILIARChanging(string value);
    partial void OnMODALIDADVISTADOMICILIARChanged();
    partial void OnPERSONAREFERENCIAChanging(bool value);
    partial void OnPERSONAREFERENCIAChanged();
    partial void OnFECHAVISITAChanging(System.DateTime value);
    partial void OnFECHAVISITAChanged();
    #endregion
		
		public VISITADOMICILIAR()
		{
			this._FAMILIA = default(EntityRef<FAMILIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVISITADOMICILIAR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDVISITADOMICILIAR
		{
			get
			{
				return this._IDVISITADOMICILIAR;
			}
			set
			{
				if ((this._IDVISITADOMICILIAR != value))
				{
					this.OnIDVISITADOMICILIARChanging(value);
					this.SendPropertyChanging();
					this._IDVISITADOMICILIAR = value;
					this.SendPropertyChanged("IDVISITADOMICILIAR");
					this.OnIDVISITADOMICILIARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFAMILIA", DbType="Int")]
		public System.Nullable<int> IDFAMILIA
		{
			get
			{
				return this._IDFAMILIA;
			}
			set
			{
				if ((this._IDFAMILIA != value))
				{
					if (this._FAMILIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFAMILIAChanging(value);
					this.SendPropertyChanging();
					this._IDFAMILIA = value;
					this.SendPropertyChanged("IDFAMILIA");
					this.OnIDFAMILIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREAVISITADOMICILIAR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AREAVISITADOMICILIAR
		{
			get
			{
				return this._AREAVISITADOMICILIAR;
			}
			set
			{
				if ((this._AREAVISITADOMICILIAR != value))
				{
					this.OnAREAVISITADOMICILIARChanging(value);
					this.SendPropertyChanging();
					this._AREAVISITADOMICILIAR = value;
					this.SendPropertyChanged("AREAVISITADOMICILIAR");
					this.OnAREAVISITADOMICILIARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODALIDADVISTADOMICILIAR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MODALIDADVISTADOMICILIAR
		{
			get
			{
				return this._MODALIDADVISTADOMICILIAR;
			}
			set
			{
				if ((this._MODALIDADVISTADOMICILIAR != value))
				{
					this.OnMODALIDADVISTADOMICILIARChanging(value);
					this.SendPropertyChanging();
					this._MODALIDADVISTADOMICILIAR = value;
					this.SendPropertyChanged("MODALIDADVISTADOMICILIAR");
					this.OnMODALIDADVISTADOMICILIARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSONAREFERENCIA", DbType="Bit NOT NULL")]
		public bool PERSONAREFERENCIA
		{
			get
			{
				return this._PERSONAREFERENCIA;
			}
			set
			{
				if ((this._PERSONAREFERENCIA != value))
				{
					this.OnPERSONAREFERENCIAChanging(value);
					this.SendPropertyChanging();
					this._PERSONAREFERENCIA = value;
					this.SendPropertyChanged("PERSONAREFERENCIA");
					this.OnPERSONAREFERENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHAVISITA", DbType="DateTime NOT NULL")]
		public System.DateTime FECHAVISITA
		{
			get
			{
				return this._FECHAVISITA;
			}
			set
			{
				if ((this._FECHAVISITA != value))
				{
					this.OnFECHAVISITAChanging(value);
					this.SendPropertyChanging();
					this._FECHAVISITA = value;
					this.SendPropertyChanged("FECHAVISITA");
					this.OnFECHAVISITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FAMILIA_VISITADOMICILIAR", Storage="_FAMILIA", ThisKey="IDFAMILIA", OtherKey="IDFAMILIA", IsForeignKey=true)]
		public FAMILIA FAMILIA
		{
			get
			{
				return this._FAMILIA.Entity;
			}
			set
			{
				FAMILIA previousValue = this._FAMILIA.Entity;
				if (((previousValue != value) 
							|| (this._FAMILIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FAMILIA.Entity = null;
						previousValue.VISITADOMICILIAR.Remove(this);
					}
					this._FAMILIA.Entity = value;
					if ((value != null))
					{
						value.VISITADOMICILIAR.Add(this);
						this._IDFAMILIA = value.IDFAMILIA;
					}
					else
					{
						this._IDFAMILIA = default(Nullable<int>);
					}
					this.SendPropertyChanged("FAMILIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
